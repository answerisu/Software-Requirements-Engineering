web-scraper-order,web-scraper-start-url,detail,detail-href,title,question,answer,votes,answers
1666768298-316,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=9&pagesize=15,"Visual studio code terminal, how to run a command with administrator rights?",https://stackoverflow.com/questions/37700536/visual-studio-code-terminal-how-to-run-a-command-with-administrator-rights,"Visual studio code terminal, how to run a command with administrator rights?","The new version 1.2.0 include a terminal, but when I try to install any pack with node I get the npm ERR! code EPERM that I usually solve right clicking and running it as administrator. So how I do that in the vscode terminal? There is something like sudo for linux?","Option 1 - Easier & Persistent

Running Visual Studio Code as Administrator should do the trick.

If you're on Windows you can:


Right click the shortcut or app/exe
Go to properties
Compatibility tab
Check ""Run this program as an administrator""


There is a caveat to it though

Make sure you have all other instances of VS Code closed and then try to run as Administrator. The electron framework likes to stall processes when closing them so it's best to check your task manager and kill the remaining processes.

Related Changes in Codebase


https://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/8915236-visual-code-w-terminal-integrated-and-super-admin
https://github.com/Microsoft/vscode/issues/7407


Option 2 - More like Sudo

If for some weird reason this is not running your commands as an Administrator you can try the runas command. Microsoft: runas command

Examples


runas /user:Administrator myCommand
runas ""/user:First Last"" ""my command""


Notes


Just don't forget to put double quotes around anything that has a space in it.
Also it's quite possible that you have never set the password on the Administrator account, as it will ask you for the password when trying to run the command. You can always use an account without the username of Administrator if it has administrator access rights/permissions.",154,7
1666768324-317,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=9&pagesize=15,How can I clear the terminal in Visual Studio Code?,https://stackoverflow.com/questions/48713604/how-can-i-clear-the-terminal-in-visual-studio-code,How can I clear the terminal in Visual Studio Code?,I need to clean the contents of the terminal in Visual Studio Code.,"Use Ctrl+K. This goes clean your console in Visual Studio Code.
Per comments, in later versions of VSCode (1.29 and above) this shortcut is missing / needs to be created manually.

Navigate: File > Preferences > Keyboard Shortcuts
search for workbench.action.terminal.clear
If it has no mapping or you wish to change the mapping, continue; otherwise note & use the existing mapping
Double click on this entry & you'll be prompted for a key binding.  Hold CTRL and tap K.  Ctrl + K should now be listed.  Press enter to save this mapping
Right click the entry and select Change when expression.  Type terminalFocus then press enter.
That's it.  Now, when the terminal is in focus and you press Ctrl+K you'll get the behaviour you'd have expected to get from running clear/cls.",297,33
1666768350-318,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=9&pagesize=15,Error: 'types' can only be used in a .ts file - Visual Studio Code using @ts-check,https://stackoverflow.com/questions/48859169/error-types-can-only-be-used-in-a-ts-file-visual-studio-code-using-ts-che,Error: 'types' can only be used in a .ts file - Visual Studio Code using @ts-check,"I am starting to use TypeScript in a Node project I am working on in Visual Studio Code. I wanted to follow the ""opt-in"" strategy, similar to Flow. Therefore I put // @ts-check at the top of my .js file in hope to enable TS for that file. Ultimately I want the same experience of ""linting"" as Flow, therefore I installed the plugin TSLint so I could see Intellisense warnings/errors.","I'm using flow with vscode but had the same problem.  I solved it with these steps:

Install the extension Flow Language Support

Disable the built-in TypeScript extension:

Go to Extensions tab
Search for @builtin TypeScript and JavaScript Language Features
Click on Disable",202,10
1666768376-319,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=9&pagesize=15,How to add more indentation in the Visual Studio code explorer file tree structure?,https://stackoverflow.com/questions/55310734/how-to-add-more-indentation-in-the-visual-studio-code-explorer-file-tree-structu,How to add more indentation in the Visual Studio code explorer file tree structure?,How to add more indentation in a file tree structure? It has a little bit indentation I want to increase more just like NetBeans.,"Go to File > Preference > Settings and choose:

Workbench › Tree: Indent
Controls tree indentation in pixels.

or (in your settings.json enter this directly)
 ""workbench.tree.indent"": 10

and choose a high enough number for you.
Also see my answer at Visual Studio code sidebar Vertical guideline (customize sidebar) where with v1.36 you can add colorized tree indent guides to make the explorer file structure more obvious.

The example picture uses: ""tree.indentGuidesStroke"": ""#00ff00"" in the colorCustomizations, so the guidelines will appear green.
{                                         // in settings.json
  ""workbench.colorCustomizations"": {
    ""tree.indentGuidesStroke"": ""#00ff00""
}


In a small change coming to v1.64 note that the minimum tree indent will be raised to 4 from 0 previously.  So you will not be able to go less than 4.",371,6
1666768402-320,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=9&pagesize=15,Is there a way to remove unused imports and declarations from Angular 2+? [closed],https://stackoverflow.com/questions/46722701/is-there-a-way-to-remove-unused-imports-and-declarations-from-angular-2,Is there a way to remove unused imports and declarations from Angular 2+? [closed],"We don’t allow questions seeking recommendations for books, tools, software libraries, and more. You can edit the question so it can be answered with facts and citations.","Edit (as suggested in comments and other people), Visual Studio Code has evolved and provides this functionality in-built as the command ""Organize imports"", with the following default keyboard shortcuts:

option+Shift+O for Mac

 Alt  +  Shift  + O for Windows



Original answer:

I hope this visual studio code extension will suffice your need: https://marketplace.visualstudio.com/items?itemName=rbbit.typescript-hero

It provides following features:


Add imports of your project or libraries to your current file
Add an import for the current name under the cursor
Add all missing imports of a file with one command
Intellisense that suggests symbols and automatically adds the needed imports
""Light bulb feature"" that fixes code you wrote
Sort and organize your imports (sort and remove unused)
Code outline view of your open TS / TSX document
All the cool stuff for JavaScript as well! (experimental stage though, better description below.)


For Mac: control+option+o

For Win: Ctrl+Alt+o",288,6
1666768428-321,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=9&pagesize=15,How do I find and replace all occurrences (in all files) in Visual Studio Code?,https://stackoverflow.com/questions/37346481/how-do-i-find-and-replace-all-occurrences-in-all-files-in-visual-studio-code,How do I find and replace all occurrences (in all files) in Visual Studio Code?,I can't figure out how to find and replace all occurrences of a word in different files using Visual Studio Code version 1.0.,"I'm using Visual Studio Code 1.8, and this feature is available. But it's a little tricky to understand at first, and (at the time of writing) the docs don't explain clearly how to use it, so here's how it works, step by step:
Invoke Replace in Files (under the Edit menu, or with shortcut Ctrl+Shift+H)
You'll see a standard Find/Replace input replacing the files pane on the left:

Enter your search string and the replace string, then press enter. It may churn for a second searching all files, then it'll show the proposed changes in all your project files -- but note, these changes haven't been made yet! Here's what it looks like:

Now you need to make the changes (and even after that, you have to save the modified files.)
You can make those changes in various ways:

Make all changes to all files at once.


Click the replace icon next to your replace string (note: you'll get a dialog to confirm this bulk action.)


Make all changes in a single file at once.


Click the replace icon next to the filename (note: the icon only shows up when you hover over the filename row)


Make a single change in a single file.


Click the replace icon next to the individual change: (note: the icon only shows up when you hover over the change row)

Finally, don't forget to save!
All those files are now modified in the editor and not yet saved to disk (unless Auto Save is on).
Use File -> Save All (or Ctrl+Alt+S)
Update: I'm not sure when this was added, but if you click the ""Replace all"" button and see this dialog, clicking ""Replace"" will change and save all files in one click:",498,9
1666768454-322,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=9&pagesize=15,Show whitespace characters in Visual Studio Code,https://stackoverflow.com/questions/30140595/show-whitespace-characters-in-visual-studio-code,Show whitespace characters in Visual Studio Code,"Is it possible to show whitespace characters, like the space character, in Visual Studio Code?","VS Code 1.6.0 and Greater
As mentioned by aloisdg below, editor.renderWhitespace is now an enum taking either none, boundary or all. To view all whitespaces:
""editor.renderWhitespace"": ""all"", 

Before VS Code 1.6.0
Before 1.6.0, you had to set editor.renderWhitespace to true:
""editor.renderWhitespace"": true",627,13
1666768480-323,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=9&pagesize=15,Should I commit the .vscode folder to source control?,https://stackoverflow.com/questions/32964920/should-i-commit-the-vscode-folder-to-source-control,Should I commit the .vscode folder to source control?,Is the .vscode folder meant to be committed to source control?,"Check in the .vscode folder if you want to share settings, task configuration and debug configuration with the team. I think generally it makes sense to share settings (e.g. whitespace vs tabs) with the team if you want to enforce settings in a team. We in the VS Code team share debug and task specific settings as well because we want our team to have the same set of debug targets and task targets for VS Code.

Btw you do not need to have a .vscode folder in your project for settings. You can also configure settings on a user level.",546,9
1666768506-324,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=9&pagesize=15,How to do tag wrapping in VS code?,https://stackoverflow.com/questions/40155875/how-to-do-tag-wrapping-in-vs-code,How to do tag wrapping in VS code?,"I would like to wrap my selected html within a tag in VS code. 
How do I do that?","Embedded Emmet could do the trick:

Select text (optional)
Open command palette (usually Ctrl+Shift+P)
Execute Emmet: Wrap with Abbreviation
Enter a tag div (or an abbreviation .wrapper>p)
Hit Enter

Command can be assigned to a keybinding.


This thing even supports passing arguments:
{
    ""key"": ""ctrl+shift+9"",
    ""command"": ""editor.emmet.action.wrapWithAbbreviation"",
    ""when"": ""editorHasSelection"",
    ""args"": {
        ""abbreviation"": ""span"",
    },
},

Use it like this:

span.myCssClass
span#myCssId
b
b.myCssClass",330,8
1666768531-325,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=9&pagesize=15,How can you create multiple cursors in Visual Studio Code,https://stackoverflow.com/questions/29953479/how-can-you-create-multiple-cursors-in-visual-studio-code,How can you create multiple cursors in Visual Studio Code,What are the keyboard shortcuts for creating multiple cursors in VS Code?,"Press Alt and click. This works on Windows and Linux*, and it should work on Mac, too.

More multi-cursor features are now available in Visual Studio Code 0.2:


  Multi cursor improvements

  Ctrl+D (Cmd+D on Mac) selects next occurrence of word under cursor or of the current selection

  Ctrl+K Ctrl+D moves last added cursor to next occurrence of word under cursor or of the current selection

  The commands use matchCase by default. If the find widget is open, then the find widget settings (matchCase / matchWholeWord) will be used for determining the next occurrence

  Ctrl+U (Cmd+U on Mac) undoes the last cursor action, so if you added a cursor too many or made a mistake, you can press Ctrl+U (Cmd+U on Mac) to go back to the previous cursor state.
  Adding cursor up or down (Ctrl+Alt+Up / Ctrl+Alt+Down) (Cmd+Alt+Up / Cmd+Alt+Down on Mac) now reveals the last added cursor to make it easier to work with multiple cursors on more than 1 viewport height at a time (i.e. select 300 lines and only 80 fit in the viewport).  
  
  This makes it a lot easier to introduce multiple cursors


* Linux drag-window conflict:


  Some distros (e.g. Ubuntu) assign window dragging to Alt+LeftMouse, which will conflict with VSCode.
  
  So, recent versions of VSCode let you toggle between Alt+LeftMouse and Ctrl+LeftMouse under the Selection menu, as detailed in another answer.
  
  Alternately, you could change your OS key bindings using gsettings as mentioned in another answer.",762,23
1666768557-326,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=9&pagesize=15,How to avoid errors in Vscode for putting header files in a separate directory than src,https://stackoverflow.com/questions/72640804/how-to-avoid-errors-in-vscode-for-putting-header-files-in-a-separate-directory-t,How to avoid errors in Vscode for putting header files in a separate directory than src,"Ok so I am having an issue with errors in VSCode. Basically I decided to reorganize and move my header files into a separate folder, ""include"". My directory put simply is as follows:","You need to put that folder's path to the Include path. One way to do that is shown below. The screenshots are attached with each steps so that it(the process) would be more clear.
Step 1
Press Ctrl + Shift + P
This will open up a prompt having different options. You have to select the option saying Edit Configurations

Step 2
After selecting Edit Configurations a page will open with different options. You have to scroll down and go the the option saying Include Path and just paste the path to your include folder there.

Below is the picture after adding the include folder's path into the Include Path option.

Step 3
Now after adding the path to the include folder into the Include path field you can close this window and all the vscode errors that you mentioned will not be there anymore.",0,2
1666768582-327,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=9&pagesize=15,How to change C++ version being used by VS Code?,https://stackoverflow.com/questions/66680147/how-to-change-c-version-being-used-by-vs-code,How to change C++ version being used by VS Code?,I printed __cplusplus and found out that my files are executed with C++98 in Visual Studio Code. I'm using the CodeRunner extension.,"Go to extensions, then type ms-vscode.cpptools in the search bar.
Click on the C/C++ extension, and to the right of Uninstall, there should be a gear icon. Click it.
A dropdown menu should open. Select Extension Settings.
Now click in the search bar (sometimes it makes you click twice before you can type without replacing the extension filter) and type  cppStandard.
From here, you should see two options, one for Cpp Standard, and one for C Standard.
Change Cpp Standard to your desired version. I generally use c++17.",5,2
1666768608-328,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=9&pagesize=15,Visual Studio Code is not showing the ouput of Python,https://stackoverflow.com/questions/49529153/visual-studio-code-is-not-showing-the-ouput-of-python,Visual Studio Code is not showing the ouput of Python,"I am really new to Python and just started the course ""Python 3 basics by Sendtex (Link: https://www.youtube.com/channel/UCfzlCWGWYyIQ0aLC5w48gBQ)"".",null,10,6
1666768633-329,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=9&pagesize=15,Why is VS Code showing this these labels or parameter names for System.out.println() in java files?,https://stackoverflow.com/questions/71865654/why-is-vs-code-showing-this-these-labels-or-parameter-names-for-system-out-print,Why is VS Code showing this these labels or parameter names for System.out.println() in java files?,I have the java extension pack installed. This just started happening today. Not sure if this is due to some json settings or something else.,"See Random things such as ""s:"", ""x:"", and name of parameters are showing up inside of my print statements: java extension issues.

It's a new feature introduced in 1.5.0, called inlay hint. We use that
to display the parameter names of those arguments.
If you do not want to have them in your editor, you can set the
setting java.inlayHints.parameterNames.enabled to none",11,7
1666768658-330,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=9&pagesize=15,Visual Studio Code c++11 extension warning,https://stackoverflow.com/questions/51046803/visual-studio-code-c11-extension-warning,Visual Studio Code c++11 extension warning,"I am in the process of learning c++ and I'm using visual studio code for Mac. I use Code Runner to run my program. My problem is that when I use something from c++11 like ""auto"" for variable declaration, visual studio code gives me a warning like this, but if I try running it on Xcode or Eclipse it doesn't:","In VS Code:

File>>Preference>>Settings>>Extensions

find C_Cpp>Default:Cpp Standard drop down menu

set that to c++11",16,9
1666768709-331,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=8&pagesize=15,Is there a way to flatten or merge single-folder folders in vs code explorer?,https://stackoverflow.com/questions/53726587/is-there-a-way-to-flatten-or-merge-single-folder-folders-in-vs-code-explorer,Is there a way to flatten or merge single-folder folders in vs code explorer?,"I don't know if there's a name for this kind of behavior.

I've seen it in IntelliJ, where single-folder folders are unified or flattened in the project tree pane, where instead of:","It looks like it is in the iteration plan for June, 2019.  

See Iteration plan for June, 2019: release in July, 2019 and issue: merging single child directories.



Update: making it into v1.41 to be released in December, 2019.  See https://github.com/microsoft/vscode-docs/blob/vnext/release-notes/v1_41.md#compact-folders-in-explorer


  Compact folders in Explorer
  
  In the File Explorer, we now render single child folders in a compact
  form. In such a form, single child folders will be compressed in a
  combined tree element. Useful for Java package structures, for
  example.
  
  Setting explorer.compactFolders controls this behavior. By default,
  this setting is turned on.


So ""explorer.compactFolders"": false, will disable the feature.",17,1
1666768735-332,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=8&pagesize=15,How to quickly change shell folder to match the currently open file,https://stackoverflow.com/questions/56218958/how-to-quickly-change-shell-folder-to-match-the-currently-open-file,How to quickly change shell folder to match the currently open file,"With single file opened in vscode, when I open integrated Powershell it always starts in my $HOME folder.","EDIT: A new command will be added in v1.39 to make this more straightforward, see release notes.  The example keybinding given is:

{
    ""key"": ""cmd+shift+h"",
    ""command"": ""workbench.action.terminal.newWithCwd"",
    ""args"": {
        ""cwd"": ""${fileDirname}""
    }
}


which does indeed work in the Insider's Build.  This will create a new terminal though, not modify an existing terminal.



[Original Answer]: This will change the current terminal.

You can set up a keybinding to do this pretty easily:

{
  ""key"": ""alt+t"",
  ""command"": ""workbench.action.terminal.sendSequence"",
  ""args"": {""text"": ""cd '${fileDirname}'\u000D""}
},


The \u000D is a return so the command triggers immediately.

Also note that I put the '${fileDirname}' in quotes in case your directory name has spaces in it.

The keybinding will work whether focus is in the terminal or the file.



Suggested edit to be tested : 

Note that on windows, you must use the following instead:

""args"": {""text"": ""cd /d \""${fileDirname}\""\u000D""}


This is because on Windows, the /d parameter must be used with cd to switch drives.



Also see shortcut to change directory in Powershell and cmd for additional info in case you are changing drive letters and escaping double quotes in Powershell.

{
    ""key"": ""ctrl+alt+d"",
    ""command"": ""workbench.action.terminal.sendSequence"",
    ""args"": {""text"": ""cd \""${fileDirname}\""\u000D""}
}


with discussion of the /d flag.  Thanks to @skataben for the additional info.



Alternatively, there is an extension to do this:  terminal-here, but the keybinding actually works faster.  The sendSequence and variable substitution functionality was not available when that extension was created.

Finally, if you right-click on a folder in the explorer, there is an Open in Terminal option there (and corresponding command).  Which means you could use that command in a keybinding like so:

{
  ""key"": ""alt+t"",
  ""command"": ""openInTerminal""
}


But my first sendSequence keybinding remains the fastest way to do this.",12,5
1666768760-333,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=8&pagesize=15,Angular CLI 1.7.0 and Visual Studio Code - can't set breakpoints,https://stackoverflow.com/questions/48892311/angular-cli-1-7-0-and-visual-studio-code-cant-set-breakpoints,Angular CLI 1.7.0 and Visual Studio Code - can't set breakpoints,"I'm using the Chrome Debugger plugin in Visual Studio Code to debug an Angular application.  After upgrading to use angular/cli@1.7.0, we can no longer hit breakpoints in the typescript code within VS Code while debugging.  If we roll back to angular/cli@1.6.7, breakpoints start working again.","For those coming across this the fix is to modify your launch.json sourceMapPathOverrides as follows:

""sourceMapPathOverrides"": { 
    ""webpack:/*"": ""${webRoot}/*"" 
}


This fixed it for me with the latest @angular/cli (version 1.7.3).

Answer was found here.",7,6
1666768786-334,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=8&pagesize=15,VSCode hide top-right icons,https://stackoverflow.com/questions/47266613/vscode-hide-top-right-icons,VSCode hide top-right icons,"I'm a big fan of VScode's minimalist approach, but one thing is bugging me. I would like to hide editor-tab icons.","Extension Custom CSS and JS Loader

.tabs-and-actions-container .editor-actions {
    display: none !important;
}


Optionally, show them on hover:

.tabs-and-actions-container:hover .editor-actions {
    display: flex !important;
}",42,8
1666768811-335,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=8&pagesize=15,Import could not be resolved/could not be resolved from source Pylance in VS Code using Python 3.9.2 on Windows 10,https://stackoverflow.com/questions/68486207/import-could-not-be-resolved-could-not-be-resolved-from-source-pylance-in-vs-cod,Import could not be resolved/could not be resolved from source Pylance in VS Code using Python 3.9.2 on Windows 10,My Flask App server is running but I have three imports that cannot be resolved.,"Open the Command Palette (Ctrl+Shift+P), then select the Python: Select Interpreter. From the list, select the virtual environment in your project folder that starts with .env.

Run Terminal: Create New Integrated Terminal (Ctrl+Shift+` or from the Command Palette), which creates a terminal and automatically activates the virtual environment by running its activation script.

Install sqlalchemy and mongoengine with command pip install. Once installing them successfully, there will intellisense when you import them and no warnings shown.



Besides, the folder .vscode is to store Workspace settings as well as debugging and task configurations.",45,7
1666768837-336,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=8&pagesize=15,How to filter files shown in Visual Studio Code?,https://stackoverflow.com/questions/31639563/how-to-filter-files-shown-in-visual-studio-code,How to filter files shown in Visual Studio Code?,How would you filter the files shown in the folder view in Visual Studio Code?,"Hiding files and folders

The files.exclude setting lets you define patterns to hide files and folders from several places in VS Code like the explorer and search. Once defined, files and folders matching any of the patterns will be hidden.

{
    ""files.exclude"": {
        ""**/*.js"": true
    }
}


Hide derived resources

If you use a language that compiles to another file at the same location of the source file, like TypeScript does to JavaScript, you can easily set an expression to hide those derived files:

""**/*.js"": { ""when"": ""$(basename).ts""}


Such a pattern will match on any JavaScript file (**/*.js), but only if a sibling file with the same name and extension, *.ts in this example, is present. The same technique can be used for other transpiled languages, like Coffee Script or Less/Sass, too.

Source: VS Code v0.5.0 (July 2015)",82,5
1666768862-337,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=8&pagesize=15,Disable wavy underline in VS Code,https://stackoverflow.com/questions/43454967/disable-wavy-underline-in-vs-code,Disable wavy underline in VS Code,"I'm using Visual Studio Code (v1.11.2).

Is there any way to disable wavy underline at all?","To disable wavy/squiggly underline in vscode, go to preferences and set underline color to fully transparent:  

{
    ""workbench.colorCustomizations"": {
        ""editorError.foreground"":   ""#00000000"",
        ""editorWarning.foreground"": ""#00000000"",
        ""editorInfo.foreground"":    ""#00000000""
    }
}


Though it may be better to make underline color just less vibrant:

{
    ""workbench.colorCustomizations"": {
        ""editorError.foreground"":   ""#ff000088"",
        ""editorWarning.foreground"": ""#ffe60033"",
        ""editorInfo.foreground"":    ""#00ff0088""
    }
}",55,9
1666768888-338,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=8&pagesize=15,"Visual Studio Code ""Open With Code"" does not appear after right-clicking a folder",https://stackoverflow.com/questions/37306672/visual-studio-code-open-with-code-does-not-appear-after-right-clicking-a-folde,"Visual Studio Code ""Open With Code"" does not appear after right-clicking a folder","Just installed Visual Studio Code 1.1.1 on a Windows 7 machine. When I right-click on a folder, ""Open With Code"" does not appear.","Copied from Right click on Windows folder and open with Visual Studio Code

Create file vsCodeOpenFolder.reg with this content (If you didn't choose the default installation path then you need to adjust the paths in this file):
 Windows Registry Editor Version 5.00
 ; Open files
 [HKEY_CLASSES_ROOT\*\shell\Open with VS Code]
 @=""Edit with VS Code""
 ""Icon""=""C:\\Program Files (x86)\\Microsoft VS Code\\Code.exe,0""
 [HKEY_CLASSES_ROOT\*\shell\Open with VS Code\command]
 @=""\""C:\\Program Files (x86)\\Microsoft VS Code\\Code.exe\"" \""%1\""""
 ; This will make it appear when you right click ON a folder
 ; The ""Icon"" line can be removed if you don't want the icon to appear
 [HKEY_CLASSES_ROOT\Directory\shell\vscode]
 @=""Open Folder as VS Code Project""
 ""Icon""=""\""C:\\Program Files (x86)\\Microsoft VS Code\\Code.exe\"",0""
 [HKEY_CLASSES_ROOT\Directory\shell\vscode\command]
 @=""\""C:\\Program Files (x86)\\Microsoft VS Code\\Code.exe\"" \""%1\""""
 ; This will make it appear when you right click INSIDE a folder
 ; The ""Icon"" line can be removed if you don't want the icon to appear
 [HKEY_CLASSES_ROOT\Directory\Background\shell\vscode]
 @=""Open Folder as VS Code Project""
 ""Icon""=""\""C:\\Program Files (x86)\\Microsoft VS Code\\Code.exe\"",0""
 [HKEY_CLASSES_ROOT\Directory\Background\shell\vscode\command]
 @=""\""C:\\Program Files (x86)\\Microsoft VS Code\\Code.exe\"" \""%V\""""


Double click it to create the registry entries.

If the ""Open with Code"" doesn't appear in the Explorer's context menu then you should restart your system.

If you're running the 64-bit or Insiders version of VS Code, change the path accordingly. ie. C:\\Users\\[user_name]\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe",137,22
1666768913-339,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=8&pagesize=15,Visual Studio Code Automatic Imports,https://stackoverflow.com/questions/38210604/visual-studio-code-automatic-imports,Visual Studio Code Automatic Imports,I'm in the process of making the move from Webstorm to Visual Studio Code.  The Performance in Webstorm is abysmal.,"2018 now. You don't need any extensions for auto-imports in Javascript (as long as you have checkjs: true in your jsconfig.json file) and TypeScript.
There are two types of auto imports: the add missing import quick fix which shows up as a lightbulb on errors:

And the auto import suggestions. These show up a suggestion items as you type. Or you can select text and press Ctrl + Space to bring up a list of suggestions. Accepting an auto import suggestion automatically adds the import at the top of the file

Both should work out of the box with JavaScript and TypeScript. If auto imports still do not work for you, please open an issue",128,17
1666768939-340,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=8&pagesize=15,"'TypeError [ERR_INVALID_ARG_TYPE]: The ""path"" argument must be of type string. Received type undefined'",https://stackoverflow.com/questions/60234640/typeerror-err-invalid-arg-type-the-path-argument-must-be-of-type-string-r,"'TypeError [ERR_INVALID_ARG_TYPE]: The ""path"" argument must be of type string. Received type undefined'",I'm working on a project in React and ran into a problem that has me stumped.,"To fix this issue simply upgrade react-scripts package (check latest version with npm info react-scripts version):


Replace in your package.json ""react-scripts"": ""^3.x.x"" with ""react-scripts"": ""^3.4.1"" (or the latest available version)
(optional for some) Delete your node_modules folder
Run npm install or yarn install


Some people reported that this issue was caused by running npm audit fix (avoid it!).",287,29
1666768947-341,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=8&pagesize=15,How can I install vscode-server in linux offline [duplicate],https://stackoverflow.com/questions/56671520/how-can-i-install-vscode-server-in-linux-offline,How can I install vscode-server in linux offline [duplicate],"I am trying to install VScode remote-ssh extensions, but my remote host could not connect to the Internet,so there is no way to download software is needed.
So I got some error message like that:","First get commit id
Download vscode server from url: https://update.code.visualstudio.com/commit:${commit_id}/server-linux-x64/stable
Upload the vscode-server-linux-x64.tar.gz to server
Unzip the downloaded vscode-server-linux-x64.tar.gz to ~/.vscode-server/bin/${commit_id} without vscode-server-linux-x64 dir
Create 0 file under ~/.vscode-server/bin/${commit_id}

commit_id=f06011ac164ae4dc8e753a3fe7f9549844d15e35

# Download url is: https://update.code.visualstudio.com/commit:${commit_id}/server-linux-x64/stable
curl -sSL ""https://update.code.visualstudio.com/commit:${commit_id}/server-linux-x64/stable"" -o vscode-server-linux-x64.tar.gz

mkdir -p ~/.vscode-server/bin/${commit_id}
# assume that you upload vscode-server-linux-x64.tar.gz to /tmp dir
tar zxvf /tmp/vscode-server-linux-x64.tar.gz -C ~/.vscode-server/bin/${commit_id} --strip 1
touch ~/.vscode-server/bin/${commit_id}/0

- or -
See this Gist download-vs-code-server for a more complete shell script that will also get the latest released commit SHA (from GitHub) so you do not need to supply it yourself.

[edited to add helpful comment in case comments disappear later:]
You can replace commit:<commit> with latest to get the latest release build. Example: https://update.code.visualstudio.com/latest/server-linux-x64/stable. Respects indicated quality i.e, stable, insider. – Doom5",38,1
1666768973-342,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=8&pagesize=15,#include errors detected in vscode,https://stackoverflow.com/questions/45583473/include-errors-detected-in-vscode,#include errors detected in vscode,I am using Visual Studio Code in my C++ project. I installed Microsoft C/C++ Extension for VS Code. I got the following error:,Close and re-open Visual Studio Code.,112,20
1666768999-343,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=8&pagesize=15,Visual Studio Code to use node version specified by NVM,https://stackoverflow.com/questions/44700432/visual-studio-code-to-use-node-version-specified-by-nvm,Visual Studio Code to use node version specified by NVM,Is it possible for VS Code to use node version specified by NVM?,"In VS Code:

go to your launch.json file
add the runtimeVersion attribute inside configurations as shown below

In this example, we are assuming 4.8.7 is already installed using nvm:
{
""version"": ""<some-version>"",
""configurations"": [
    {
        ""type"": ""node"",
        ""runtimeVersion"": ""4.8.7"", // If i need to run node 4.8.7
        ""request"": ""launch"",
        ""name"": ""Launch"",
        ""program"": ""${workspaceFolder}/sample.js""
    }
]}",159,32
1666769025-344,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=8&pagesize=15,Automatically hard wrap lines at column in VSCode,https://stackoverflow.com/questions/43122175/automatically-hard-wrap-lines-at-column-in-vscode,Automatically hard wrap lines at column in VSCode,"How can I automatically hard wrap lines in VSCode? By that I mean if a line reaches a specified column, automatically insert a newline at the word boundary closest to that column without going over. Vim has a setting called textwidth that does this that I like to use when editing Markdown. It doesn't seem like VSCode does, as far as I can tell. It just has ways to control softwrapping.","VSCode doesn't support this out of the box. But you can install the Rewrap extension, which allows you to format the block that your cursor is currently in by pressing Alt + Q.

Rewrap requires no further settings, since it reads VSCode's settings to obtain the column at which to break.

Rewrap also supports automatic wrapping (off by default): https://github.com/stkb/Rewrap/wiki/Auto-wrap",211,11
1666769050-345,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=8&pagesize=15,How to add multiple terminals in VS Code?,https://stackoverflow.com/questions/43427631/how-to-add-multiple-terminals-in-vs-code,How to add multiple terminals in VS Code?,Can we add multiple different terminals in the VS Code? I am planning to add following three terminal and work with all of those :,"There is a way to make this happens with these steps by installing an extension:

Find an extension called Shell launcher and install it or you can find it here.  Reload VS Code if you want or after you finished all steps.

Go to Files --> Preferences --> Settings and this will open settings.json file and you then insert this (you can edit this to your heart's content):


Code:
""shellLauncher.shells.windows"": [
    {
        ""shell"": ""C:\\Windows\\<sysnative>\\cmd.exe"",
        ""label"": ""cmd""
    },
    {
        ""shell"": ""C:\\Windows\\<sysnative>\\WindowsPowerShell\\v1.0\\powershell.exe"",
        ""label"": ""PowerShell""
    },
    {
        ""shell"": ""C:\\Program Files\\Git\\bin\\bash.exe"",
        ""label"": ""Git bash""
    },
    {
        ""shell"": ""C:\\Windows\\<sysnative>\\bash.exe"",
        ""label"": ""WSL Bash""
    }
]

PS: You can use shellLauncher.shells.linux for Linux or shellLauncher.shells.osx for macOS.

Go to Files --> Preferences --> Keyboard Shortcuts and then find on {} icon on the top right corner to open keybindings.json file.  Insert this:

Code:
[
    { ""key"": ""ctrl+alt+`"", ""command"": ""shellLauncher.launch"" }
]

Update: Type shelllauncher into the search bar. You can then see Shell Launcher: Launch command. Highlight and use any keybinding you like. For example, I picked Ctrl + Alt + (backtick)` for myself.
You can reload your VS Code and click the key combination you have assigned and that will give you the option to choose which integrated terminal you want to use.

For more details, please check the official site: https://marketplace.visualstudio.com/items?itemName=Tyriar.shell-launcher
Enjoy!",108,12
1666769102-346,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=7&pagesize=15,Experimental decorators warning in TypeScript compilation,https://stackoverflow.com/questions/38271273/experimental-decorators-warning-in-typescript-compilation,Experimental decorators warning in TypeScript compilation,I receive the warning...,"I've to add the following in the settings.json file of vscode to remove the warning.
""javascript.implicitProjectConfig.experimentalDecorators"": true

VSCode -> Preferences -> Settings

UPDATE
As Clepsyd pointed out, this setting had been deprecated. You need to use now
""js/ts.implicitProjectConfig.experimentalDecorators"":true",491,39
1666769128-347,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=7&pagesize=15,How can I install Visual Studio Code extensions offline?,https://stackoverflow.com/questions/37071388/how-can-i-install-visual-studio-code-extensions-offline,How can I install Visual Studio Code extensions offline?,"I have installed Visual Studio Code on a machine that is not, and cannot be, connected to the Internet. According to the documentation, I can install an extension from the command line if I have the .vsix, but I don't know how to get the .vsix from the marketplace.","UPDATE 2017-12-13

You can now download the extension directly from the marketplace.



As of Visual Studio Code 1.7.1 dragging or opening the extension does not work any more. In order to install it manually you need to:


open the extensions sidebar
click on the ellipsis in the right upper corner
choose Install from VSIX






Old Method

According to the documentation it is possible to download an extension directly:


  An extension's direct download URL is in the form:

https://${publisher}.gallery.vsassets.io/_apis/public/gallery/publisher/${publisher}/extension/${extension name}/${version}/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage



This means that in order to download the extension you need to know


the publisher name
the version
the extension name


You can find all this information in the URL.

Example

Here's an example for downloading an installing the C# v1.3.0 extension:

Publisher, Extension and Version

You can find the publisher and the extension names on the extension's homepage inside its URL:


  https://marketplace.visualstudio.com/items?itemName=ms-vscode.csharp


Here the publisher is ms-vscode and the extension name is csharp.

The version can be found on the right side in the More Info area.

To download it you need to create a link from the template above:


  https://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/ms-vscode/extension/csharp/1.3.0/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage


All packages will have the same name Microsoft.VisualStudio.Services.VSIXPackage, so you'll need to rename it after downloading if you want to know what package it was later.

Installation

In order to install the extension


Rename the file and give it the *.vsix extension
Open Visual Studio Code, go to menu File → Open File... or Ctrl + O and select the .vsix file
If everything went fine, you should see this message at the top of the window:



  Extension was successfully installed. Restart to enable it.",181,14
1666769154-348,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=7&pagesize=15,How to open Visual Studio Code from the command line on OSX?,https://stackoverflow.com/questions/29971053/how-to-open-visual-studio-code-from-the-command-line-on-osx,How to open Visual Studio Code from the command line on OSX?,"The docs mention an executable called code, but I'm not sure where I can find that so I can put it on my path. The zip I downloaded from the VSCode site did not include any such executable. (I am able to run the .app just fine.)","From the Visual Studio Code Setup page:

Tip: If you want to run VS Code from the terminal by simply typing 'code', VS Code has a command, Shell Command: Install 'code' command in PATH, to add 'code' to your $PATH variable list.
After installation, launch VS Code. Now open the Command Palette (F1 or ⇧+⌘+P on Mac) and type shell command to find the Shell Command: Install 'code' command in PATH command.
After executing the command, restart the terminal for the new $PATH value to take effect. You'll be able to simply type 'code .' in any folder to start editing files in that folder.",510,32
1666769180-349,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=7&pagesize=15,Switch focus between editor and integrated terminal,https://stackoverflow.com/questions/42796887/switch-focus-between-editor-and-integrated-terminal,Switch focus between editor and integrated terminal,Does anyone know the keyboard shortcut (Mac and Linux) to switch the focus between editor and integrated terminal in Visual Studio Code?,"While there are a lot of modal toggles and navigation shortcuts for VS Code, there isn't one specifically for ""move from editor to terminal, and back again"". However you can compose the two steps by overloading the key and using the when clause.

Solution
You can achieve the desired effect by adding the appropriate settings to the keybindings.json file. Here are the required steps:

Open the Command Palette (Ctrl+Shift+P Windows/Linux or ⇧ ⌘ P Mac).

Type ""Preferences: Open Keyboard Shortcuts File"" and press Enter.

Add the following entries to the keybindings.json file:


// Toggle between terminal and editor focus
{
    ""key"":     ""ctrl+`"",
    ""command"": ""workbench.action.terminal.focus""
},
{
    ""key"":     ""ctrl+`"",
    ""command"": ""workbench.action.focusActiveEditorGroup"",
    ""when"":    ""terminalFocus""
}

With these shortcuts you can focus between the editor and the Integrated Terminal using the same keystroke.

NOTE
In modern versions of VS Code (as of 2022) the Default Keyboard Shortcuts (JSON) file is read-only, so that is why for the custom settings you need to edit a separate dedicated file keybindings.json.
More info can be found on the official Visual Studio documentation page:

Key Bindings for Visual Studio Code: Advanced customization",1002,26
1666769196-350,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=7&pagesize=15,How can I start Powershell script as noprofile in Visual Studio Code,https://stackoverflow.com/questions/60537341/how-can-i-start-powershell-script-as-noprofile-in-visual-studio-code,How can I start Powershell script as noprofile in Visual Studio Code,"How can I start Powershell script as noprofile in Visual Studio Code, I can run the Powershell Ise with noprofile with command PowerShell_Ise -NoProfile . But howcan we do the same for a poershell session in Visual Studio Code.","If you're running PowerShell in the PIC (PowerShell Integrated Console), which is a a special shell that comes with the PowerShell extension:

To turn off profile loading in this special shell, make sure that the

PowerShell: Enable Profile Loading option for the PowerShell extension is unchecked (via File > Preferences > Settings, Ctrl-,).

See the bottom section for how to control which particular PowerShell edition / executable is used in the PIC (PowerShell Integrated Console).



If you're running PowerShell as a general-purpose shell in Visual Studio Code's integrated terminal:

You'll have to modify the default PowerShell shell profile or add a custom profile, with an ""args"" argument value of [ ""-noprofile"" ], by direct editing of the JSON file underlying the settings, settings.json (>Preferences: Open Settings (JSON) from the command palette).

The following shows a relevant settings.json excerpt with a modified default PowerShell profile that suppresses profile loading.




""terminal.integrated.profiles.windows"": {
    ""PowerShell"": {
      ""source"": ""PowerShell"",
      ""icon"": ""terminal-powershell"",
      ""args"": [ ""-noprofile"" ]  // suppress profile loading
    },  // ...
}

Read on for detailed, general information about shells and terminals in Visual Studio Code.

Overview of shell and terminal settings in Visual Studio Code:

3 different types of shells apply intrinsically:

The default shell for the integrated terminal (the TERMINAL tab of the panel).

Optionally, the automation shell to use for automation tasks (defined in tasks.json) instead of the default integrated-terminal shell.


The default shell for opening an external terminal (> Open New External Terminal); note that on Windows you can specify a shell executable directly, but on Unix-like platforms you must specify a terminal application, which itself then determines the shell to launch - see details below.



With the PowerShell extension installed, yet another shell applies:

The specific PowerShell executable to use for the PIC (PowerShell Integrated Console), which provides tight integration with editing and support for debugging PowerShell code.



These shells:

can all be configured separately

may differ in their default behavior

only some of them allow you to specify startup parameters, such as -NoProfile in your case.

The default shells are:

For the integrated terminal and running tasks:

Windows: PowerShell.

Note that if a PowerShell (Core) 6+ version is found to be installed, it takes precedence over the built-in Windows PowerShell edition.


Unix-like platforms: the user's default shell, as reflected in the SHELL environment variable.


For the external terminal:

Windows: conhost.exe, which launches cmd.exe (Command Prompt)
Unix-like platforms: the host platform's default terminal application, such as Terminal.app on macOS, which itself determines what shell to launch (though, by default, it is also the user's default shell).
Note: On Windows only you may specify a shell (rather than a terminal) executable directly (e.g., bash.exe), in which case it opens in a regular console window (conhost.exe)





The following excerpt from a Settings.json file (> Preferences: Open Settings (JSON)) shows the relevant settings for each (as of VSCode v1.60 / PowerShell Extension v2021.8.2):

In earlier VSCode versions, the ""terminal.integrated.shell.*"" and ""terminal.integrated.shellArgs.*"" settings determined the default shell and its startup arguments for the integrated terminal. These have been superseded by shell profiles, defined via ""terminal.integrated.profiles.*"" properties, and an associated ""terminal.integrated.defaultProfile.*"" property that contains the name of the profile to use by default, as shown below.

{ 

  // ...

  // **General-purpose integrated-terminal shell**.

  // Shell *profiles* define the *available* shells for the integrated terminal.
  // This property is situationally created automatically, platform-appropriately,
  // based on what shells VSCode finds in standard locations on your 
  // system.
  // However, it *need not be present* in a given file - VSCode
  // knows about about *standard* profiles *implicitly* when it
  // comes to choosing a default shell.
  // This example applies to Windows, and shows that Git Bash
  // was found on the system.
  // On Unix-like platforms, replace "".windows"" with "".osx"" or "".linux"", 
  // as appropriate.
  // To add custom profiles:
  //   * In file *paths*, use ""\\"" or ""/"" as the path separator.
  //   * Use an ""args"" array property to specify start-up arguments, if necessary.
  ""terminal.integrated.profiles.windows"": {
      ""PowerShell"": {
        ""source"": ""PowerShell"",
        ""icon"": ""terminal-powershell""
      },
      ""Command Prompt"": {
        ""path"": [
          ""${env:windir}\\Sysnative\\cmd.exe"",
          ""${env:windir}\\System32\\cmd.exe""
        ],
        ""args"": [],
        ""icon"": ""terminal-cmd""
      },
      ""Git Bash"": {
        ""source"": ""Git Bash""
      }
  }

  // Define the *default* shell profile, which serves as the default
  // shell in the *integrated terminal* and - except
  // if overridden, as shown below - also for *tasks*.
  ""terminal.integrated.defaultProfile.windows"": ""PowerShell""  
  
  // **Automation-tasks shell**,
  // for the tasks defined in ""tasks.json"" and for debugging:
  // This definition is *optional* and *overrides* the default shell configured above.
  // Note: 
  //  * The *executable file path* must be specified (just the file name is sufficient for executables present in %PATH%);
  //    that is, this setting doesn't reference the shell *profiles*.
  //  * There is NO way to pass startup arguments.
  ""terminal.integrated.automationShell.windows"": ""cmd.exe"",

  // **External-terminal executable**:
  // The *terminal program* to use for opening an external terminal window, which itself determines what shell to launch.
  // (> Open New External Terminal).
  // Note: 
  //  * The *executable file path* must be specified (just the file name is sufficient for executables present in %PATH%);
  //  * There is NO way to pass startup arguments.
  //  * This example specifies Windows Terminal (wt.exe).
  //   * On Windows only, you may also specify a *shell* executable directly,
  //     which then opens in a regular console window (conhost.exe)
  ""terminal.external.windowsExec"": ""wt.exe"",

  // **PowerShell Integrated Console**:
  // Profile loading is *disabled* by default; you can enable it here, but 
  // note that the PowerShell Integrated Console has its own, 
  // separate $PROFILE location, which differs from the one in a 
  // regular console window. If you want to load your regular profile, 
  // place the following statement in the $PROFILE file of 
  // the Integrated Console:
  //    . ($PROFILE -replace '\.VSCode', '.PowerShell')
  // (Open the profile file for editing by submitting the following command 
  // from the Integrated Console: 
  //    code $PROFILE
  // )
  ""powershell.enableProfileLoading"": false,
  
  // ...

}


If you want to configure the PIC (PowerShell Integrated Console) to use a different PowerShell edition / version:
Note: Written as of version v2022.6.3 of the PowerShell extension.

GUI method: With the PowerShell Integrated Console active in the Terminal tab in VSCode's panel (lower half of the screen), click on  the {} icon in the status bar (the bottom right corner, then click on Show PowerShell Session Menu in the tooltip window that pops up, as shown below; alternatively, irrespective of what tab is effective submit PowerShell: Show Session Menu in the command palette to open the relevant menu.

)

If the session menu is pinned as an icon, it looks something like this, reflecting the active version number, and clicking it directly opens the PowerShell session menu in the command palette:

)

This opens the PowerShell session menu in the command palette: Choose from the other available versions, if any, which are prefixed with Switch to:, which makes that version the default going forward.

If the version / edition of interest isn't shown, you must add its executable path either via the Settings GUI - by selecting Modify list of additional PowerShell locations from the PowerShell session menu - or via your Settings.json file (see next point).

Via settings.json (> Preferences: Open Settings (JSON)):

The powershell.powerShellAdditionalExePaths setting is a single object that allows you to add the full executable paths of PowerShell versions that the extension couldn't find automatically by self-chosen property names - see example below.

The powershell.powerShellDefaultVersion property determines which version to use by default, which is either the name of property of the powershell.powerShellAdditionalExePaths setting or that of an auto-discovered version, as shown in the session menu. Selecting a Switch to: entry from the menu automatically updates this setting.




{ 

  // ...

  // The paths to any PowerShell executables that the extension cannot auto-discover.
  // The property names are self-chosen names, which show in the
  // PowerShell session menu.
  // Note: 
  //  * Executable paths only are supported, not also arguments.
  //  * If a value isn't a valid executable path, it is ignored,
  //    and the version doesn't show up in the session menu.
  // In the status bar, the currently active version is displayed by its actual characteristics,
  //  not by these self-chosen property names; e.g., 
  //  ""PowerShell 7.2"")
  ""powershell.powerShellAdditionalExePaths"": { 
      ""Latest Preview"": ""C:\\Users\\jdoe\\AppData\\Local\\Microsoft\\powershell\\pwsh.exe"" 
  },

  // The PowerShell version to use by default, which can be
  // a property name from ""powershell.powerShellAdditionalExePaths"" or
  // the name of an auto-discovered version, as show in the PowerShell
  // session menu.
  ""powershell.powerShellDefaultVersion"": ""Latest Preview"",

  // ...

}",4,2
1666769222-351,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=7&pagesize=15,Xdebug V3 doesn't stop breakpoints in VSCode,https://stackoverflow.com/questions/65137732/xdebug-v3-doesnt-stop-breakpoints-in-vscode,Xdebug V3 doesn't stop breakpoints in VSCode,I am trying to debug on my XAMPP using VSCode and didn't worked. I know there are tons of questions about this and I've tried everything I can but still won't work.,"You are using Xdebug v3 but keep using Xdebug v2 config parameters. You need to go through Upgrading from Xdebug 2 to 3 Guide and adjust your settings.
Xdebug v3 uses different config params than Xdebug v2 (your phpinfo() output tells you exactly that on your screenshot). 5 out of 6 ""xdebug."" params from your current php.ini do nothing in Xdebug v3.
For Xdebug 3 it should be like this (based on your original config -- better start using new 9003 default port):
zend_extension = ""C:\xampp\php\ext\php_xdebug.dll""
xdebug.mode = debug
xdebug.start_with_request = yes
xdebug.client_port = 9000
xdebug.client_host = ""127.0.0.1""
xdebug.log = ""C:\xampp\tmp\xdebug\xdebug.log""
xdebug.idekey = VSCODE",14,2
1666769247-352,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=7&pagesize=15,Failed to launch emulator: Error: Emulator didn't connect within 60 seconds,https://stackoverflow.com/questions/55677874/failed-to-launch-emulator-error-emulator-didnt-connect-within-60-seconds,Failed to launch emulator: Error: Emulator didn't connect within 60 seconds,I'm unable to debug using VSCode for Flutter. I'm using Windows and I'm trying to use an Android emulator.,"i had same problem,
i tried to stopping emulator based on Answer of Rahul Shukla:

Steps:
Open Android Studio
Tools -> AVD Manager
Virtual Device -> Actions (Refer Image)
Click On Stop
Now Start Emulator
Now it's working fine :)

but it not work for me.
i test another way. i use these steps:

Open Android Studio Tools -> AVD Manager Virtual Device -> Actions
Click On Wipe data

Now Start Emulator and Enjoy it!!",62,33
1666769273-353,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=7&pagesize=15,"How to turn off ""matching"" highlighting in VS Code?",https://stackoverflow.com/questions/39775406/how-to-turn-off-matching-highlighting-in-vs-code,"How to turn off ""matching"" highlighting in VS Code?","I don't want Visual Studio Code to highlight matching brackets, all occurrences of the same variable, etc.  I find it very distracting.  However, I can find no way to disable this feature.","There are different types of highlighting:
1. Syntax highlighting (place cursor inside variable)

""editor.occurrencesHighlight"": false

2. Selection highlighting (similar chunks in document)

""editor.selectionHighlight"": false

3. Matching brackets highlighting
""editor.matchBrackets"": false


There's a second way - make them less obtrusive (or completely transparent):
""workbench.colorCustomizations"": {
    ""editor.selectionHighlightBackground"": ""#0000"", // similar selection
    ""editor.selectionHighlightBorder"": ""#0000"",

    ""editor.wordHighlightStrongBackground"": ""#0000"", // syntax variable assignment
    ""editor.wordHighlightStrongBorder"": ""#0000"",

    ""editor.wordHighlightBackground"": ""#0000"", // syntax variable
    ""editor.wordHighlightBorder"": ""#0000"",

    ""editorBracketMatch.border"": ""#0000"",// brackets
    ""editorBracketMatch.background"": ""#0000"",
}",43,5
1666769298-354,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=7&pagesize=15,How do I skip external code when debugging in VS Code,https://stackoverflow.com/questions/47556495/how-do-i-skip-external-code-when-debugging-in-vs-code,How do I skip external code when debugging in VS Code,"When debugging in vscode I'd like to make some ""blackboxing"" and do not enter into code I didn't write. How can I do this?","In your launch or attach debug task you can enter a

""skipfiles""

option which is

""An array of file or folder names, or path globs, to skip when debugging.""

For example, from skipping node internals during debugging
""skipFiles"": [
  ""${workspaceFolder}/node_modules/**/*.js"",
  ""${workspaceFolder}/yourLibToSkip/**/*.js""
]

Also, there is a ""magic reference"" to the built-in core node modules you can use:
""skipFiles"": [
  ""<node_internals>/**/*.js""
]",52,8
1666769324-355,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=7&pagesize=15,How to enable autocomplete for Google Apps Script in locally-installed IDE,https://stackoverflow.com/questions/49015874/how-to-enable-autocomplete-for-google-apps-script-in-locally-installed-ide,How to enable autocomplete for Google Apps Script in locally-installed IDE,I'm trying to build GAS projects locally using clasp.,"I found the solution that partially works, but it may not be applicable to other software. The steps below are for Visual Studio Code:


Install the NPM package containing type definitions for GAS using

https://www.npmjs.com/package/@types/google-apps-script

In your locally-saved script, create a '.js' file and type

import 'google-apps-script';",30,5
1666769350-356,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=7&pagesize=15,vscode import error for python module,https://stackoverflow.com/questions/46520127/vscode-import-error-for-python-module,vscode import error for python module,I am trying to do an import in python from one directory level up.,"I tried to add this in my launch.json, then it works!

""env"": {""PYTHONPATH"": ""${workspaceRoot}""}


below is my launch.json

        ""name"": ""Python: Current File (Integrated Terminal)"",
        ""type"": ""python"",
        ""request"": ""launch"",
        ""program"": ""${file}"",
        ""cwd"": ""${workspaceRoot}"",
        ""env"": {""PYTHONPATH"": ""${workspaceRoot}""},
        ""console"": ""integratedTerminal""


wish it can help u! :)",55,11
1666769376-357,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=7&pagesize=15,Define multiple tasks in VSCode,https://stackoverflow.com/questions/30046411/define-multiple-tasks-in-vscode,Define multiple tasks in VSCode,I have seen that it is possible to define a task in the VSCode. But I am not sure how to define multiple tasks in the tasks.json file.,"Just in case it helps someone... .
If you don't have/want gulp/grunt/etc... or an extra shell script to proxy out your task commands , ""npm run"" is there already .

this is for webpack and mocha as in ""Build and Test"" , Shift+Ctrl+B, Shift+Ctrl+T

.vscode/tasks.json:

{
  ""name"": ""npmTask"",
  //...
  ""suppressTaskName"": true,
  ""command"": ""npm"",
  ""isShellCommand"": true,
  ""args"": [
    ""run""
  ],
  ""tasks"": [
    {
      //Build Task
      ""taskName"": ""webpack"",
      //Run On Shift+Ctrl+B
      ""isBuildCommand"": true,
      //Don't run when Shift+Ctrl+T
      ""isTestCommand"": false,
      // Show the output window if error any
      ""showOutput"": ""silent"",
      //Npm Task Name
      ""args"": [
        ""webpack""
      ],
      // use 2 regex:
      // 1st the file, then the problem       
      ""problemMatcher"": {
        ""owner"": ""webpack"",
        ""severity"": ""error"",
        ""fileLocation"": ""relative"",
        ""pattern"": [
          {
            ""regexp"": ""ERROR in (.*)"",
            ""file"": 1
          },
          {
            ""regexp"": ""\\((\\d+),(\\d+)\\):(.*)"",
            ""line"": 1,
            ""column"": 2,
            ""message"": 3
          }
        ]
      }
    },
    {
      //Test Task   
      ""taskName"": ""mocha"",
      // Don't run on Shift+Ctrl+B
      ""isBuildCommand"": false,
      // Run on Shift+Ctrl+T
      ""isTestCommand"": true,
      ""showOutput"": ""always"",
      ""args"": [
        ""mocha""
      ]
    }
  ]
}


package.json:

{
  ...
  ""scripts"": {
    ""webpack"": ""webpack"",
    ""mocha"": ""/usr/bin/mocha""
  },
  ...
}",83,13
1666769402-358,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=7&pagesize=15,How to trigger parameter hints in Visual Studio Code?,https://stackoverflow.com/questions/53731271/how-to-trigger-parameter-hints-in-visual-studio-code,How to trigger parameter hints in Visual Studio Code?,I want to show parameter hints when I position cursor within the parentheses of the calling method.,"For Windows and Linux:
Ctrl + Shift + Space
For MacOS:
Shift ⇧ + Cmd ⌘ + Space",190,6
1666769428-359,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=7&pagesize=15,Visual Studio Code - How to add multiple paths to python path?,https://stackoverflow.com/questions/41471578/visual-studio-code-how-to-add-multiple-paths-to-python-path,Visual Studio Code - How to add multiple paths to python path?,"I am experimenting with Visual Studio Code and so far, it seems great (light, fast, etc).","This worked for me:-

in your launch.json profile entry, specify a new entry called ""env"", and set PYTHONPATH yourself.

""configurations"": [
    {
        ""name"": ""Python"",
        ""type"": ""python"",
        ""stopOnEntry"": false,
        ""request"": ""launch"",
        ""pythonPath"": ""${config.python.pythonPath}"",
        ""program"": ""${file}"",
        ""cwd"": ""${workspaceRoot}"",
        ""debugOptions"": [
            ""WaitOnAbnormalExit"",
            ""WaitOnNormalExit"",
            ""RedirectOutput""
        ],
        ""env"": {
            ""PYTHONPATH"": ""/path/a:path/b""
        }
    }
]",63,8
1666769454-360,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=7&pagesize=15,"Using ""Remote SSH"" in VSCode on a target machine that only allows inbound SSH connections",https://stackoverflow.com/questions/56718453/using-remote-ssh-in-vscode-on-a-target-machine-that-only-allows-inbound-ssh-co,"Using ""Remote SSH"" in VSCode on a target machine that only allows inbound SSH connections",Is there a way to use the VSCode Remote SSH extension to interact with a remote host that does not allow outbound internet connections?,"When you connect to a host it executes a bash script that wgets or curls a tarball and extracts it in a directory in your home directory. Here's an offline workaround.

Attempt to connect, let it fail

On server, get the commit id
$ ls ~/.vscode-server/bin
553cfb2c2205db5f15f3ee8395bbd5cf066d357d


Download tarball replacing $COMMIT_ID with the the commit number from the previous step


For Stable Version
https://update.code.visualstudio.com/commit:$COMMIT_ID/server-linux-x64/stable
For Insider Version
https://update.code.visualstudio.com/commit:$COMMIT_ID/server-linux-x64/insider

Move tarball to ~/.vscode-server/bin/$COMMIT_ID/vscode-server-linux-x64.tar.gz

Extract tarball in this directory
$ cd ~/.vscode-server/bin/$COMMIT_ID
$ tar -xvzf vscode-server-linux-x64.tar.gz --strip-components 1


Connect again


You'll still need to install any extensions manually. There's a download button next to all the extensions in the marketplace. Once you have the .vsix file you can install them through the GUI with the Install from VSIX option in the extensions manager.
This is kind of a pain and hopefully they improve this process, but if you have a network-based home directory, you only have to do this once.",43,5
1666769506-361,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=6&pagesize=15,Prevent autocomplete in Visual Studio Code,https://stackoverflow.com/questions/32911977/prevent-autocomplete-in-visual-studio-code,Prevent autocomplete in Visual Studio Code,I'm using the new Visual Studio Code.,"In the most recent version of Visual Studio Code I've found out that the

""editor.acceptSuggestionOnCommitCharacter"": false


configuration disables this behavior.",180,9
1666769532-362,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=6&pagesize=15,"How to exclude file extensions and languages from ""format on save"" in VSCode?",https://stackoverflow.com/questions/44831313/how-to-exclude-file-extensions-and-languages-from-format-on-save-in-vscode,"How to exclude file extensions and languages from ""format on save"" in VSCode?",Currently in VSCode settings you can configure format on save as following:,"You can use language specific settings to enable it for a specific language only, e.g. JavaScript:

""[javascript]"": {
    ""editor.formatOnSave"": true
}


To disable it for a specific language, you could switch the global default to true and combine it with a language-specific false:

""editor.formatOnSave"": true
""[javascript]"": {
    ""editor.formatOnSave"": false
}


Note that language specific settings are based on language identifiers rather than directly on file extensions. There's an open feature request to allow for file extension specific settings as well.

In cases where the language ID isn't specific enough, ""files.associations"" could be used to remap files with a specific extension and/or in a specific directory to another ID, but this will affect syntax highlighting, code completion, etc. as well. For instance, this would work to disable formatting for JavaScript files in out directories, but they will be treated as plaintext:

""[javascript]"": {
    ""editor.formatOnSave"": true
},
""files.associations"": {
    ""**/out/**/*.js"": ""plaintext""
}",231,6
1666769558-363,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=6&pagesize=15,Visual Studio Code cannot detect installed git,https://stackoverflow.com/questions/29971624/visual-studio-code-cannot-detect-installed-git,Visual Studio Code cannot detect installed git,"Visual Studio Code reports ""It look like git is not installed on your system."" when I try to switch to the git view. I know I have git installed and used by other git clients. I guess if I re-install git following Visual Studio Code's instruction (""install it with Chocolatey or download it from git-scm.com""), it probably can fix the problem, but I don't want to mess up the existing git clients on my system. Is there a reliable way to configure Visual Studio Code so it can find existing git installation?","Now you can configure Visual Studio Code (version 0.10.2, check for older versions) to use existing git installation.

Just add the path to the git executable in your Visual Studio Code settings (File -> Preferences -> Settings) like this:

{
    // Is git enabled
    ""git.enabled"": true,

    // Path to the git executable
    ""git.path"": ""C:\\path\\to\\git.exe""

    // other settings
}",212,34
1666769584-364,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=6&pagesize=15,Visual Studio Code: How to show line endings,https://stackoverflow.com/questions/39525417/visual-studio-code-how-to-show-line-endings,Visual Studio Code: How to show line endings,"How can I display lineendings (CR,LF) in Visual Studio Code (not in Visual Studio)?","AFAIK there is no way to visually see line endings in the editor space, but in the bottom-right corner of the window there is an indicator that says ""CLRF"" or ""LF"" which will let you set the line endings for a particular file. Clicking on the text will allow you to change the line endings as well.",316,7
1666769610-365,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=6&pagesize=15,"Visual Studio Code formatting for ""{ }""",https://stackoverflow.com/questions/45823734/visual-studio-code-formatting-for,"Visual Studio Code formatting for ""{ }""",I'm on Ubuntu. C++ in Visual Studio Code automatically lints like,"base on @Chris Drew's answer


Go Preferences -> Settings
Search for C_Cpp.clang_format_fallbackStyle
Click Edit, Copy to Settings
Change from ""Visual Studio"" to ""{ BasedOnStyle: Google, IndentWidth: 4 }""


e.g.


""C_Cpp.clang_format_fallbackStyle"": ""{ BasedOnStyle: Google, IndentWidth: 4, ColumnLimit: 0}""

btw ColumnLimit: 0 is helpful too, because google limit will break your code to next line when you do not need it.


If you want more:


check https://clang.llvm.org/docs/ClangFormatStyleOptions.html
customize your functionality to ""C_Cpp.clang_format_fallbackStyle"" for your loved favor.


More detail:

English: https://medium.com/@zamhuang/vscode-how-to-customize-c-s-coding-style-in-vscode-ad16d87e93bf

Taiwan: https://medium.com/@zamhuang/vscode-%E5%A6%82%E4%BD%95%E5%9C%A8-vscode-%E4%B8%8A%E8%87%AA%E5%AE%9A%E7%BE%A9-c-%E7%9A%84-coding-style-c8eb199c57ce",133,6
1666769636-366,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=6&pagesize=15,Choose folders to be ignored during search in VS Code,https://stackoverflow.com/questions/29971600/choose-folders-to-be-ignored-during-search-in-vs-code,Choose folders to be ignored during search in VS Code,"Right now when I use ⌘+O to search for files, the fuzzy matching appears to operate over all files in the current project. Unfortunately, this includes a number of files from build and vendor directories. So, for instance, if I want to search for all JavaScript files and do ⌘+O and type .js in, the file and symbol results include around 1500 hits and all of them except the two ones are complete noise.","Temporary Exclusions
From the search function, click the ellipsis to show the files to include and files to exclude text boxes. Enter any files and folder to exclude (separated by commas).

Persistent Exclusions
From menu choose File ➡️ Preferences ➡️ Settings ➡️ User/Workspace Settings and filter default settings to search.

User settings will apply to all workspaces
Workspace settings will apply only to this workspace

You can modify the search.exclude setting (copy from default setting to your user or workspace settings). That will apply only to searches. Note that settings from files.exclude will be automatically applied.
Toggling search exclusions
You can (sometimes accidentally) toggle if these exclusions are enabled or disabled when searching using the gear icon in the files to exclude text box. Click the ellipsis, then the gear icon to toggle.

Additional documentation on configuring settings in Visual Studio Code
If the settings don't work
You might also need to Clear Editor History (See: https://github.com/Microsoft/vscode/issues/6502).
Example
I am developing an EmberJS application which saves thousands of files under the tmp directory.
If you select WORKSPACE SETTINGS on the right side of the search field, the search exclusion will only be applied to this particular project. And a corresponding .vscode folder will be added to the root folder containing settings.json.
This is my example settings:
{
    // ...
    ""search.exclude"": {
        ""**/.git"": true,
        ""**/node_modules"": true,
        ""**/bower_components"": true,
        ""**/tmp"": true
    },
    // ...
}

Note: Include a ** at the beginning of any search exclusion to cover the search term over any folders and sub-folders.
Picture of search before updating settings:
Before updating the settings the search results are a mess.

Picture of search after updating settings:
After updating the settings the search results are exactly what I want.",609,19
1666769662-367,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=6&pagesize=15,How do I use Bash on Ubuntu on Windows (WSL) for my VS Code terminal?,https://stackoverflow.com/questions/44450218/how-do-i-use-bash-on-ubuntu-on-windows-wsl-for-my-vs-code-terminal,How do I use Bash on Ubuntu on Windows (WSL) for my VS Code terminal?,"While other questions deal with how to use things like git-bash, giving the new WSL a spin as the terminal for VS Code is not the same: it gives you access to bash running on an actual Ubuntu Linux subsystem, instead of the git-bash terminal running on the Windows subsystem.","This answer seeks to help others avoid spending 1-2 hours troubleshooting and slowly finding disparate solutions for common problems when using WSL for the terminal in VS Code. It does not cover installing specific packages, but rather common ones that may not properly install as dependencies when installing things that do rely on their presence, and on fixing related common settings.

Summary of steps


WSL installed
VS Code (or other IDE) configured for terminal
NPM installed & path fix in .profile (may help with other tools)
build-essential installed (helps with any tools that use make/gcc/etc)
VS Code Tasks using WSL
Extras


Getting Started & Requirements


You must have WSL installed. (Which means you must be running 64 bit Windows 10, with the appropriate updates) Follow the install guide if not already installed. This will require some reboots.


VS Code Terminal Configuration

Either the CTRL+, keyboard shortcut, or File → Preferences → Settings

In the top right of the editing window, make sure you are working in the correct context for you: either User Settings or Workspace Settings.



In the settings search bar, type terminal.integrated.shell.windows (or whatever gets you far enough long)

Find the setting in the actual settings file, use Edit (mouse over the line, it will be on the left: on a touch screen without a mouse, you should be able to simply tap to the left of the line), and select Replace in Settings



In the right pane, modify the entry created in the modified json file: replace the previous setting with

""C:\\WINDOWS\\Sysnative\\bash.exe""




Other IDEs: IntelliJ

Open Settings/Tools/Terminal and set the ""Shell path"" field to ""C:\Users\USERNAME\AppData\Local\Microsoft\WindowsApps\ubuntu.exe""

Making your WSL Ubuntu Bash Terminal functional for dev

When you use CTRL+` to open the terminal, you should now have a bash terminal.

If this is the first time you have run bash.exe, you may be asked about installing Ubuntu. Do so. Once your installation is complete, choose your username and password to be used in WSL Ubuntu. These do not have to coincide with your current Windows account, and it's important to note that they will not change based on changes to your Windows account's password.

Once you are done, you will have a bash command prompt in your terminal.

Note that unlike git-bash on Windows, this is a separate environment. While it can be used to launch Windows software outside of itself, you will need appropriate Ubuntu packages to run them within the actual terminal.

Currently, WSL does not come loaded with everything you might expect or be used to having, and some things can conflict with software you have loaded in Windows, based on default profile settings.

Updates & git

Note: I'm going to document these as sudo for people who simply need single pieces of this, but one option at the start is to instead sudo su and simply running the following commands without sudo.

Make sure your Ubuntu packages are up to date:

sudo apt-get -y update
sudo apt-get -y upgrade
sudo apt-get -y dist-upgrade
sudo apt autoremove


Install git:

sudo apt-get install git


Node.js & NPM

If you already have Node or NPM loaded in Windows, running them in Ubuntu can get problematic due to path issues. So, you need to install the Ubuntu native versions and ensure that they are used instead.

First, install node.js with NPM.
(alternate: install NVM and use it to install node.js)

After installing, running npm commands will probably fail: for example, npm -v will probably give you:

: not foundram Files/nodejs/npm: 3: /mnt/c/Program Files/nodejs/npm:
: not foundram Files/nodejs/npm: 5: /mnt/c/Program Files/nodejs/npm:
/mnt/c/Program Files/nodejs/npm: 6: /mnt/c/Program Files/nodejs/npm: Syntax error: word unexpected (expecting ""in"")


This is due to a pathing issue with a fairly straightforward solution. Using your favorite CLI editor (such as nano, vim, emacs, cat and sed… etc), open your ~/.profile

nano ~/.profile


Note: do NOT attempt to edit Linux files using Windows tools. (Thanks to @david-c-rankin's comment for the official link with the bold red text explaining this) If you don't want to use a CLI editor for this in the terminal, see the bottom of this post for a link on how to get a GUI one running.

Currently, the default bash PATH variable in WSL is

PATH=""$HOME/bin:$HOME/.local/bin:$PATH""


Which is injecting the windows path after the first two binary directories. Unfortunately, this doesn't result in /usr/bin being used before the windows installed npm, so add that before the final $PATH:

PATH=""$HOME/bin:$HOME/.local/bin:/usr/bin:$PATH""


Save out, and then either reload the terminal or just source the path file

source ~/.profile


Build-essential

If you are using anything which requires compiling or otherwise uses make, it's almost guaranteed that you will need these installed; so if you did not install them while installing node.js, do so. It's much easier to simply use the build-essential package rather than try to install everything separately.

Note that packages such as Compass which rely on Ruby FFI will fail without these. If you are having trouble properly installing and running a tool, making sure you have gcc and make installed can be a good place to start.

sudo apt-get install -y build-essential


Running Tasks using Ubuntu

Note that if you use VS Code's tasks.json to run build tasks, by default it will still run them using the Windows subsystem instead of the Ubuntu one. Sometimes this may be what you want, but if you've just finished installing grunt-cli in Ubuntu and not Windows, it's probably not.

VS Code recently had the 2017 May update to how Tasks work that allows it to set the task runner as the terminal. This is by far the easiest way to migrate tasks over.

Simply set

""runner"": ""terminal"",


in your tasks.json and you're done (assuming you have all of the appropriate tools you are trying to run now installed in WSL Ubuntu).

This is very portable, ideally requiring no changes between systems which do or do not have WSL, or to other OSes, and is the method I would recommend.

As of the moment, this method spawns another TERMINAL tab instance (accessed from the drop down). You can still set up appropriate watchers, but it does mean that it's no longer sitting on the OUTPUT tab.

The old method is capable of invoking the WSL Ubunutu Bash shell and having it show up in OUTPUT, and involves either calling bash.exe with the -c argument or using a shell script. It unfortunately is not as semantic, since we are making bash our command and passing it what we want to run as an argument instead. This also means it is not as quickly portable to other systems.

You can use the same location you gave VS Code earlier for the terminal itself, C:\\WINDOWS\\Sysnative\\bash.exe as the value for command

Set the first element of the args array as -c and the second as the command you want to run (credit to the second half of this answer).

Alternatively, you can instead run a shell script as seen here.

Further helpful bits

Want to start VSCode in Windows from the WSL Bash command line?

Want to have a graphical interface for your WSL Ubuntu? (this will allow you to do things like use a Linux GUI editor for files within the Ubuntu system itself: do not edit them using Windows editing tools, see comments/note in section on npm)

Want to build (see the above portion on setting up VS Code Tasks properly for WSL) and debug entirely within WSL Ubuntu? (this shows how to do so using gdb, but the pipeTransport concept could be used with other debuggers) (credit to this answer, but the one before it also provides a method using local loopback that could prove useful)",92,4
1666769688-368,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=6&pagesize=15,How do I search for files in Visual Studio Code?,https://stackoverflow.com/questions/30095376/how-do-i-search-for-files-in-visual-studio-code,How do I search for files in Visual Studio Code?,"I am used to Resharper where I can search for files, not the content, but the filename, which makes it quick to open new files.","Using Go to File... which is under the Go menu or using keyboard shortcut:


On Windows Ctrl+p or Ctrl+e
On macOS Cmd ⌘+p 
On Linux Ctrl+p or Ctrl+e


Then type the file name.

Also be sure to checkout that you can set your own keybindings and that there are cheatsheets available for Windows, macOS and Linux.",996,17
1666769714-369,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=6&pagesize=15,How can I navigate back to the last cursor position in Visual Studio Code?,https://stackoverflow.com/questions/35424367/how-can-i-navigate-back-to-the-last-cursor-position-in-visual-studio-code,How can I navigate back to the last cursor position in Visual Studio Code?,What is the keyboard shortcut to navigate back to the last cursor position in Visual Studio Code?,"The keyboard shortcut commands are Go Forward and Go Back.

On Windows:
Alt + ← ... navigate back
Alt + → ... navigate forward
On Mac:
Ctrl + - ... navigate back
Ctrl + Shift + - ... navigate forward
On Ubuntu Linux:
Ctrl + Alt + - ... navigate back
Ctrl + Shift + - ... navigate forward",1070,16
1666769740-370,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=6&pagesize=15,Live Sass Compiler - @use causes compilation error,https://stackoverflow.com/questions/66193156/live-sass-compiler-use-causes-compilation-error,Live Sass Compiler - @use causes compilation error,"I'm using Live Sass Compiler v3.0.0 in my VS Code and it throws a compilation error whenever I use the @use rule to import variables from another file. However, when I use the Sass command line interface (sass --watch) to compile my files, it throws no errors.","I had same/similar problem two days ago.
@use is a new directive introduced in the new official Version 'Dart Sass' and replaces '@import' which is depricated now.
The popular Extension 'Live Sass Compiler' in VS Code is not longer supported by the maintainer for some time. So unfortunately the Sass Version is not updated in that extension...
In VS Code for 'Dart Sass' I found the the Extension 'DartJS Sass Compiler':

https://marketplace.visualstudio.com/items?itemName=codelios.dartsass
Actual I just did a quick testing so I cannot report much about it. But on the first glance it is running well. But as it is another extension you may have to change some settings.
UPDATE
Additional to the above reported exentsion DartJS Sass Compiler with actual SASS version I found an actualised and actual maintained fork of Live Sass Compiler. It has been deep hidden in the searching reuslts. As it is a very popular extension in VS Code here the link to the fork:
https://marketplace.visualstudio.com/items?itemName=glenn2223.live-sass
Remark:
I played arround with both extension. Both are doing the job well and have advantages.
'DartJS Sass Compiler' has the additional possibility for more detailed output like information about sass version and watchers. And additional to included SASS version it allows to use your own SASS version if installed to your system or locally to your project. So there is no/less dependency on updates by the maintainer.
'Live Sass Compiler' runs out of the box with included sass version. As it is a very popular extension in VS Code there is a special advantage: it seems it keeps your settings in the old projects running.
I think both are good solutions.",3,1
1666769766-371,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=6&pagesize=15,LaTeX fraction snippets in VSCode,https://stackoverflow.com/questions/62545965/latex-fraction-snippets-in-vscode,LaTeX fraction snippets in VSCode,"For the past 18 months, I've been using the LaTeX Workshop extension of VSCode for all my LaTeXing needs. Up to this point, I've primarily used it for longer-form articles and reports, and sporadically for note-taking purposes in class. I've been able to make it work sufficiently well in real-time so far with just a few custom macros (Linear Algebra typesets pretty easily). However, as I move on to different classes, I'm looking to expand my real-time abilities by implementing Gilles Castel's excellent Vim-based workflow in VSCode. Unfortunately, VSCode seems to obscure or lack (by default) a great deal of the features (especially related to snippets) of which Castel makes use.","After you install HyperSnips, use its command HyperSnips: Open snippets directory to open the directory where you will put your snippets.
Snippets in all.hsnips will be available in all language files.  You can also put your snippets into something like latex.hsnips or Latex.hsnips in the same directory and both versions work for me.

Modifying the code from Castel's guide put this into your chosen <language>.hsnips file:
snippet // ""Fraction simple"" A
\frac{$1}{$2}$0
endsnippet

snippet `((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/` ""Fraction no ()"" A
\frac{``rv = m[1]``}{$1}$0
endsnippet

Note that interpolated code goes into double backticks ""``"" and the value from that code must be assigned to rv (return value).  Whatever is assigned to rv will appear in the snippet output.  Note also there are additional tabstops $1, $2 and $0 in the above snippets - there values can be accessed by the interpolated code within the t array but you don't need that here.
And then here is the final snippet that works for the harder case of embedded parentheses within your ""prefix"" like (1 + (2 + 3))/.  I think of (1 + (2 + 3))/ just like a traditional vscode snippet prefix EXCEPT that you can use regex expressions as the prefix!!  Regex prefixes/triggers must within backticks.
snippet `^.*\)/` ""Fraction with ()"" A
``
    let str = m[0];
    str = str.slice(0, -1);
    let lastIndex = str.length - 1;

    let depth = 0;
    let i = str.length - 1;

    while (true) {
        if (str[i] == ')') depth += 1;
        if (str[i] == '(') depth -= 1;
        if (depth == 0) break;
        i -= 1;
    }

    let results = str.slice(0, i) + ""\\frac{"" + str.slice(i+1, -1) + ""}"";
    results += ""{$1}$0"";
    rv = results;
    ``
endsnippet

Here ^.*\)/ is the prefix/trigger.  The extension looks at all your code as you type for that pattern which is basically at least one ) before a / and then match everything before those to the previous word boundary.  And then that match info is available within the matched code as m[0].  You can have capture groups with your prefix/trigger and access them in m[1], etc. but that isn't needed here.
As you can see, the code to be interpolated must be javascript for this extension to work.
The location of that first set of backticks is important!  Here
snippet `^.*\)/` ""Fraction with ()"" A
``
   <other code indented here>
   ``  <indented or flush left, didn't seem to matter in my testing>
endsnippet

the indented code is easier to read IMO, but the output will also be indented unless that first set of backticks is not indented (unless of course you want the output indented).  I don't that if that is a ""quirk"" or as planned.  But the position of that first set of backticks seems to determine the location of the output.
The body of this final snippet (again code from the guide you linked to, but translated to javascript by me from his python code) just figures out how far to backtrack (character by character) to get an even number of parentheses.  Any preceding part of the input prefix/trigger goes before the \frac part.
After making changes to this file, always run the command HyperSnips: Reload Snippets to ensure they are ready for testing immediately.
Demo in action:",1,2
1666769792-372,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=6&pagesize=15,How do I set up VSCode to put curly braces on a new line?,https://stackoverflow.com/questions/32900921/how-do-i-set-up-vscode-to-put-curly-braces-on-a-new-line,How do I set up VSCode to put curly braces on a new line?,Let's say I type in the following code and format it.,"Follow the steps below to make Visual Studio Code format opening curly braces on a new line for Java Script and Type Script.

In Visual Studio Code (v1.20.0)


Go to File\Preferences\Settings
Add the following lines in 'User Settings' (in the right side pane)

""javascript.format.placeOpenBraceOnNewLineForControlBlocks"": true, 
""javascript.format.placeOpenBraceOnNewLineForFunctions"": true,

""typescript.format.placeOpenBraceOnNewLineForControlBlocks"": true,
""typescript.format.placeOpenBraceOnNewLineForFunctions"": true,

Save 'User Settings' and you are done!",70,10
1666769818-373,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=6&pagesize=15,Set global $PATH environment variable in VS Code,https://stackoverflow.com/questions/43983718/set-global-path-environment-variable-in-vs-code,Set global $PATH environment variable in VS Code,"I'm defining a custom $PATH environment variable in my ~/.bash_profile (on a Mac), like so:","If you only need the $PATH to be set in the integrated terminal, you can use VS Code's terminal.integrated.env.<platform> variable (added in version 1.15). Press Cmd+Shift+P (or Ctrl+Shift+P) and search for ""Preferences: Open Settings (JSON)"". Then add the following entry to the settings file:

""terminal.integrated.env.osx"": {
  ""PATH"": ""...:/usr/bin:/bin:...""
}


(Replace .osx with .linux or .windows as needed.)

To see your system's $PATH, type echo ""$PATH"" in Terminal.app, and copy and paste it into the settings snippet above.



As for having the $PATH available everwhere in VS Code, so that it will 
be used by extensions that call binaries, the only workaround I've found so far is this:


Configure your shell (bash by default) to have the $PATH you want. For example, my ~/.bash_profile has the following line:

PATH=""$PATH:$HOME/bin""

In VS Code, press ⇧⌘P and type install 'code' command if you haven't done so before.
Quit VS Code.
Launch VS Code not by clicking the icon in the dock or in Launchpad, but by opening Terminal.app and typing code. Your newly set path will be active in VS Code until you quit it.
If VS Code restarts, for example due to an upgrade, the $PATH will reset to the system default. In that case, quit VS Code and re-launch it by typing code.",60,12
1666769844-374,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=6&pagesize=15,Debug & Run Angular2 Typescript with Visual Studio Code?,https://stackoverflow.com/questions/36494938/debug-run-angular2-typescript-with-visual-studio-code,Debug & Run Angular2 Typescript with Visual Studio Code?,Debug & Run Angular2 Typescript with Visual Studio Code?,"After lot of research, I found these steps-

Before you begin, make sure you have latest version of VS code. You can verify latest version – Help > Check For Updates or About.


Install extension called 'Debugger for Chrome'. Once install complete, restart VS code.
Go to Debug window, open launch.json using Chrome.
In Launch.json configuration section, use below config

{
    ""name"": ""Launch localhost with sourcemaps"",
    ""type"": ""chrome"",
    ""request"": ""launch"",
    ""url"": ""http://localhost:3000/Welcome"",
    ""sourceMaps"": true,
    ""webRoot"": ""${workspaceRoot}""
}

In tsconfig.json, make sure you have ""sourceMap"": true


This completes your debug environment settings.
Now, before you start debugging, make sure all your existing Chrome.exe instances are closed. Verify from Task Manager OR Use DOS command ‘killall chrome’


Run your project, using npm start command and Chrome as default browser.
Once application is run successfully, you will receive port number. Copy URL from chrome browser and paste into url section above.
(NOTE: If you are using routing in your application then url would like above otherwise it will be ending index.html etc)
Now, place breakpoints wherever you want in your typescript files.
Again, go to debug window in VS code, and hit Run. 
Your tab/instance connected to debugger will looks like below.",79,10
1666769870-375,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=6&pagesize=15,Install a Nuget package in Visual Studio Code,https://stackoverflow.com/questions/40675162/install-a-nuget-package-in-visual-studio-code,Install a Nuget package in Visual Studio Code,"How can I install a Nuget Package in Visual Studio Code? I know in Visual Studio, we  can do this through the Nuget Package Manager console, but how do I do it in VS Code?","From the command line or the Terminal windows in vs code editor dotnet add package Newtonsoft.Json

See this article by Scott Hanselman",295,12
1666769922-376,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=5&pagesize=15,VSCode Change Default Terminal,https://stackoverflow.com/questions/44435697/vscode-change-default-terminal,VSCode Change Default Terminal,I am using Visual Studio Code on my Windows 10 PC. I want to change my default terminal from Windows PowerShell to Bash on Ubuntu (on Windows).,"You can also select your default terminal by pressing F1 in VS Code and typing/selecting Terminal: Select Default Profile (or Terminal: Select Default Shell in older VSCode versions).

Older:",315,11
1666769948-377,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=5&pagesize=15,Visual studio code cmd error: Cannot be loaded because running scripts is disabled on this system,https://stackoverflow.com/questions/56199111/visual-studio-code-cmd-error-cannot-be-loaded-because-running-scripts-is-disabl,Visual studio code cmd error: Cannot be loaded because running scripts is disabled on this system,"Inside of visual studio code, I'm trying to execute a script.bat from the command line, but I'm getting the following error:","I found out here that you can add to your visual studio code settings the following and the problem will vanish:
For visual studio code settings, go to File -> Preferences -> Settings -> Extensions -> Scroll down and find ""Edit in settings.json"". Do not forget to restart the visual studio code
""terminal.integrated.shellArgs.windows"": [""-ExecutionPolicy"", ""Bypass""]

The reason is that, in build command line integrations like visual studio code, you need to set the command line policies by your self. By setting the above configurations, the visual studio code will do that for you.
(read this to understand better the command line policies)
Update August 2021
It seems that terminal.integrated.shellArgs is deprecated. This answer shows how to do it in new versions.",183,27
1666769960-378,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=5&pagesize=15,Visual Studio Code. why are the window control buttons over the menu bar on the left side?,https://stackoverflow.com/questions/73594545/visual-studio-code-why-are-the-window-control-buttons-over-the-menu-bar-on-the,Visual Studio Code. why are the window control buttons over the menu bar on the left side?,"I was working on the visual studio application.
And suddenly, my window control buttons hopped to the left side of the main menu navbar,
hiding the buttons File & Edit.","In vscode v1.71.2 the window.experimental.windowControlsOverlay.enabled setting has been disabled by default.

This bug was released in vscode v1.71.  It may be related to using RTL languages.  I would assume this will be fixed in a point release.
Try disabling this setting:
window.experimental.windowControlsOverlay.enabled
from [windows default close button location moved on its own when updating to v1.71.0][1]",5,1
1666769986-379,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=5&pagesize=15,How to reference assemblies using Visual Studio Code?,https://stackoverflow.com/questions/31888274/how-to-reference-assemblies-using-visual-studio-code,How to reference assemblies using Visual Studio Code?,I would like to reference the System.Drawing.dll in a console app I am writing using Visual Studio Code on OSX. i.e. I want to use these using statements,"In your .csproj file, add your dependency as a PackageReference in an ItemGroup, then run dotnet restore or nuget restore. Example:

<ItemGroup>
  <Reference Include=""System"" />
  <Reference Include=""System.Xml"" />
  <Reference Include=""System.Core"" />
  <Reference Include=""Xamarin.iOS"" />
  <PackageReference Include=""Realm"" Version=""2.1.0"" />
  <PackageReference Include=""xunit"">
    <Version>2.3.1</Version>
  </PackageReference>
</ItemGroup>


Take a look at this article for a full explanation.",29,3
1666770012-380,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=5&pagesize=15,vscode disable empty folders (parent/child folders) merge/collapse/inline,https://stackoverflow.com/questions/59415299/vscode-disable-empty-folders-parent-child-folders-merge-collapse-inline,vscode disable empty folders (parent/child folders) merge/collapse/inline,"If child folder is empty, vscode get them merged like on screenshot. Is there an option to disable it? It's confusing and harder to use for me.","Disable/uncheck Explorer: Compact Folders in your settings.

Related info from release notes: Is there a way to unify single-folder folders in vs code?",101,3
1666770038-381,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=5&pagesize=15,Jest + Typescript + Absolute paths (baseUrl) gives error: Cannot find module,https://stackoverflow.com/questions/50171412/jest-typescript-absolute-paths-baseurl-gives-error-cannot-find-module,Jest + Typescript + Absolute paths (baseUrl) gives error: Cannot find module,I am setting a configuration to run my tests in a create-react-app + typescript app (from which I have ejected). I am using jest + enzyme. In my tsconfig.json I have set baseUrl='./src' so I can use absolute paths when I import modules. For example this is a typical import statement in one of my files:,"I was struggling with the same problem and actually it turns out that a simple change seems to do the trick.
I just updated the moduleDirectories field in jest.config.js.
Before
moduleDirectories: ['node_modules']

After
moduleDirectories: ['node_modules', 'src']

Hope it helps.",140,18
1666770064-382,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=5&pagesize=15,How to view an HTML file in the browser with Visual Studio Code,https://stackoverflow.com/questions/30039512/how-to-view-an-html-file-in-the-browser-with-visual-studio-code,How to view an HTML file in the browser with Visual Studio Code,How can I view my HTML code in a browser with the new Microsoft Visual Studio Code?,"For Windows - Open your Default Browser - Tested on VS Code v 1.1.0

Answer to both opening a specific file (name is hard-coded) OR opening ANY other file.

Steps:


Use ctrl + shift + p (or F1) to open the Command Palette.
Type in Tasks: Configure Task or on older versions Configure Task Runner. Selecting it will open the tasks.json file. Delete the script displayed and replace it by the following:

{
    ""version"": ""0.1.0"",
    ""command"": ""explorer"",    
    ""windows"": {
        ""command"": ""explorer.exe""
    },
    ""args"": [""test.html""]
}


Remember to change the ""args"" section of the tasks.json file to the name of your file. This will always open that specific file when you hit F5.

You may also set the this to open whichever file you have open at the time by using [""${file}""] as the value for ""args"". Note that the $ goes outside the {...}, so [""{$file}""] is incorrect.
Save the file.
Switch back to your html file (in this example it's ""text.html""), and press ctrl + shift + b to view your page in your Web Browser.",372,28
1666770090-383,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=5&pagesize=15,How to change indentation in Visual Studio Code?,https://stackoverflow.com/questions/34174207/how-to-change-indentation-in-visual-studio-code,How to change indentation in Visual Studio Code?,For every typescript file visual studio code uses an auto indentation of 8 spaces. This is a bit too much for my taste but I can't find where to change it.,"In the toolbar in the bottom right corner you will see a item that looks like the following: 
After clicking on it you will get the option to indent using either spaces or tabs. After selecting your indent type you will then have the option to change how big an indent is. In the case of the example above, indentation is set to 4 space characters per indent. If tab is selected as your indentation character then you will see Tab Size instead of Spaces
If you want to have this apply to all files and not on an individual file basis, then override the Editor: Tab Size and Editor: Insert Spaces settings in either User Settings or Workspace Settings depending on your needs
Edit 1
To get to your user or workspace settings go to Preferences -> Settings. Verify that you are on the User or Workspace tab depending on your needs and use the search bar to locate the settings. You may also want to disable Editor: Detect Indentation as this setting will override what you set for  Editor: Insert Spaces and Editor: Tab Size when it is enabled",668,20
1666770116-384,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=5&pagesize=15,How to comment multiple lines in Visual Studio Code?,https://stackoverflow.com/questions/34316156/how-to-comment-multiple-lines-in-visual-studio-code,How to comment multiple lines in Visual Studio Code?,I cannot find a way to comment and uncomment multiple lines of code in Visual Studio Code.,"Windows: Shift+Alt+A
Linux: Shift+Ctrl+A
Here you can find all the keyboard shortcuts:
Windows VSCode Shortcuts
Linux VSCode Shortcuts
PS: I prefer Ctrl+Shift+/ for toggling block comments because Ctrl+/ is shortcut for toggling line comments so it's naturally easier to remember. To do so, just click on the settings icon in the bottom left of the screen and click 'Keyboard Shortcuts' and find ""toggle block..."". Then click and enter your desired combination.",551,40
1666770142-385,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=5&pagesize=15,How to change VS Code terminal selection UI from tabs back to dropdown? [duplicate],https://stackoverflow.com/questions/67554244/how-to-change-vs-code-terminal-selection-ui-from-tabs-back-to-dropdown,How to change VS Code terminal selection UI from tabs back to dropdown? [duplicate],"While I was working, I mistakenly clicked on an option and that changed the UI of the terminal on VS Code entirely + it is extremely annoying.","Fixed it.
Go to your settings.json file and update this:
""terminal.integrated.tabs.enabled"": false,

Setting the above property to false should fix your terminal from that annoying UI/UX.
It fixed my UI back to this:",0,1
1666770168-386,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=5&pagesize=15,Regex look behind in VS Code?,https://stackoverflow.com/questions/39915644/regex-look-behind-in-vs-code,Regex look behind in VS Code?,"I'm working on a grammar extension in VS Code, and I'm having difficulty with a look behind regex pattern. Given the following string, I want to only return cmp when it's preceded by the @fmt(","You can use infinite-width lookahead and lookbehind without any constraint now beginning with Visual Studio Code v.1.31.0 release.
See proof:

and another one (with (?<=@fmt\([^()]*)\w+ pattern, note the * in the lookbehind):

See the Github [VSCode 1.31] ES2018 RegExp lookbehind assertions are now supported #68004 issue:

As a result of moving to Electron 3.0, RegExp lookbehind assertions are now supported, since they’re supported since Chromium 62 and Node 8.10.0, and Electron 3.0 uses Chromium 66 and Node 10.2.0, so they’re now supported, but the release notes don’t mention that lookbehind assertions are now supported.

VS Code developers confirm that it is true that they ""forgot to mention it in the release notes"".
Note that variable-length lookbehind assertions will only work in the file editor search, but not in the Find in Files search (the magnifying glass icon). According to this GitHub issue discussion,

Search in the editor uses the JS regex engine, and search across files uses ripgrep which doesn't support [variable-length lookbehind assertions]. There are a small number of differences in regex feature support, this is one of them.

See these closed issues in the ripgrep repo:

Regexp expression failure when using lookbehind
allow handling lookbehind assertions of non-fixed length",10,3
1666770194-387,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=5&pagesize=15,How to disable “Debug” from showing in package.json,https://stackoverflow.com/questions/62358131/how-to-disable-debug-from-showing-in-package-json,How to disable “Debug” from showing in package.json,"How to disable the outlined ""Debug"" tip from showing up in package.json above the scripts section:","The setting is

  ""debug.javascript.codelens.npmScripts"": ""never"",




Since it appears as part of the scripts section of the package.json I searched for scripts in the Settings and it was the second entry.",19,1
1666770220-388,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=5&pagesize=15,VS Code - how to rollback extension/install specific extension version,https://stackoverflow.com/questions/42626065/vs-code-how-to-rollback-extension-install-specific-extension-version,VS Code - how to rollback extension/install specific extension version,"Just got an update for the Golang extension and it appears to be broken, reporting an error on a package main that's literally just a list of my imports with no useful information (see screenshot below). It's refusing to lint or do anything useful which is annoying.","From v1.30 release notes: install previous versions of extensions.


  You can now go back to a previous version of an extension if there are
  issues with the current version. VS Code provides an Install Another
  Version action on an installed extension which shows a dropdown of
  available versions.


The option to install another version is in the context menu.  Or the gear icon for each extension.  

For me when I do this - without ""Disable Auto Updating Extensions"" (I assume that the Debugger for Chrome is such an extension) it does not auto-update on reload or close/open but shows a button for that extension to install the latest version instead. 

So it appears you don't have to disable all auto-updating extensions just to revert one extension to an older version and keep it at that older version.  [leave a comment if you find that isn't true, thanks]",62,2
1666770246-389,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=5&pagesize=15,How can I create templates for file extensions in Visual Studio Code?,https://stackoverflow.com/questions/50571130/how-can-i-create-templates-for-file-extensions-in-visual-studio-code,How can I create templates for file extensions in Visual Studio Code?,In my Vue.js projects almost all the times I need this code snippet as a template.,"There isn't, not natively. But there is an extension called File Templates for VSCode that allows you to create your own file templates and generate from them. But I think you'd benefit from making an extension to do just that and maybe even more.
In the meantime, you can use a snippet to generate this instead of having to copy paste.
Go to File > Preferences > User Snippets and choose Vue from the dropdown. Vue will only show up if you have installed an extension that supports this file type. In this case, I'd recommend Vetur, but you probably have it already.
Then just add this entry to your vue.json file:
""vuetpl"" : {
        ""body"": [
            ""<template>"",
            ""\t<div>"",
            ""\t\t$0"",
            ""\t</div>"",
            ""</template>"",

            ""<script>"",

            ""export default{"",
            ""\tdata(){"",
                ""\t\treturn{"",
                    ""\t\t\t"",
                ""\t\t}"",
            ""\t},"",
            ""\tmethods:{"",
                ""\t\t"",
            ""\t},"",
            ""\tcreated(){"",
                ""\t\t"",
            ""\t}"",
            ""}"",
            ""</script>"",

            ""<style scoped>"",
            ""</style>"",
        ],
        ""prefix"": ""vuetpl"",
        ""description"": ""Creates a new template.""
    }

Then, when you create a new .vue file, just type vuetpl and press tab to autocomplete, and you'll have this:

Of course, you can also use a Snippet Generator to make your own snippets.",32,3
1666770272-390,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=5&pagesize=15,How to enable C++17 support in VSCode C++ Extension,https://stackoverflow.com/questions/49397233/how-to-enable-c17-support-in-vscode-c-extension,How to enable C++17 support in VSCode C++ Extension,"I keep on getting error squiggles on std::string_view, but I am able to build just fine. Is there a way to tell intellisense or the C++ linter to use C++17?","This has become much easier now. Search for cppstandard in your vs code extension settings and choose the version of C++ you want the extension to use from the drop down.

In order to make sure your debugger is using the same version, make sure you have something like this for your tasks.json, where the important lines are the --std and the line after that defines the version.
{
  ""tasks"": [
    {
      ""type"": ""cppbuild"",
      ""label"": ""C/C++: g++ build active file"",
      ""command"": ""/usr/bin/g++"",
      ""args"": [
        ""--std"",
        ""c++17"",
        ""-I"",
        ""${fileDirname}"",
        ""-g"",
        ""${fileDirname}/*.cpp"",
        ""-o"",
        ""${workspaceFolder}/out/${fileBasenameNoExtension}.o""
      ],
      ""options"": {
        ""cwd"": ""${workspaceFolder}""
      },
      ""problemMatcher"": [""$gcc""],
      ""group"": {
        ""kind"": ""build"",
        ""isDefault"": true
      }
    }
  ],
  ""version"": ""2.0.0""
}

Note that if you're copying the above tasks.json directly, you'll need to have a folder named out in your workspace root.",48,8
1666770324-391,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=4&pagesize=15,"Visual Studio Code, Java Extension, how to add a JAR to classpath?",https://stackoverflow.com/questions/50232557/visual-studio-code-java-extension-how-to-add-a-jar-to-classpath,"Visual Studio Code, Java Extension, how to add a JAR to classpath?","In Eclipse IDE, I add a JAR library using","Update for latest version

Pre-requisite: In VS Code you need to open the folder and not just file to include any jar file for compilation, running, debugging and testing

VSCode works fine with maven or gradle, and if we are using any of those, we should use maven or gradle for dependency management.

If you are not using any dependency management, then there are two options to add jar file

Option 1: Manually

Open .vscode/settings.json file (if not present, you can create one) and add required jar file there as shown below. In this case all the jar files present in lib directory will be included + I have added common-logging-1.1.1.jar which is located outside the project directory

{
    ""java.project.referencedLibraries"": [
        ""lib/**/*.jar"",
        ""c:\\path\\to\\jarfile\\commons-logging-1.1.1.jar""
    ]
}


Option 2: Via User Interface

If Java Extension is enabled then on left panel there will be Java Dependencies.
Inside there you can click on + symbol to add customer jar files. With this method too, the settings.json file will be updated



Old Answer kept for reference...

VSCode works fine with maven or gradle. But without those, as far as I know they have not provided any direct way to add jar file in classpath.

The workaround is to add the entry in .classpath file manually.

For e.g. in below file I have added common-logging-1.2.jar located in lib directory manually by adding a line <classpathentry exported=""true"" kind=""lib"" path=""lib/commons-logging-1.2.jar""/>

<?xml version=""1.0"" encoding=""UTF-8""?>
<classpath>
        <classpathentry kind=""con"" path=""org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8""/>
        <classpathentry kind=""src"" path=""src""/>
        <classpathentry kind=""output"" path=""bin""/>
        <classpathentry exported=""true"" kind=""lib"" path=""lib/commons-logging-1.2.jar""/>
</classpath>


Update

Finally VSCode team is working towards a better solution. This is still work in progress, but you can refer to this link for better aproach https://github.com/microsoft/vscode-java-pack/issues/94#issuecomment-573487982

Update April 2020

VSCode Extension update now supports this feature out of the box.
Now VS Code Java lets you work with JAR files directly without any build tools. Go to JAVA DEPENDENCIES view, find the Referenced Libraries node and click the + icon.

Reference https://github.com/microsoft/vscode-java-pack/blob/master/release-notes/v0.9.0.md#work-with-jar-files-directly",68,10
1666770350-392,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=4&pagesize=15,How do I change color of comments in visual studio code?,https://stackoverflow.com/questions/45195023/how-do-i-change-color-of-comments-in-visual-studio-code,How do I change color of comments in visual studio code?,I went through https://code.visualstudio.com/docs/getstarted/theme-color-reference but can't seem to find the setting for changing the comment color.,"From 1.15 (July 2017) you can change it from settings.json Ctrl+,
""editor.tokenColorCustomizations"": {
    ""comments"": ""#d4922f""
},

From 1.20 (January 2018) you can also do it for each theme separately:
""editor.tokenColorCustomizations"": {
    ""[Atom One Dark]"": {
        ""comments"": ""#d4922f""
    }
},

Or now you can specify settings for multiple themes at once as ""[Atom One Dark][Tomorrow Night Blue]"": {...}
Finding the right scope:
Developer: Inspect TM Scopes editor.action.inspectTMScopes

Selector priority:
https://code.visualstudio.com/blogs/2017/02/08/syntax-highlighting-optimizations#_textmate-themes


Ok, more examples (for js):
""editor.tokenColorCustomizations"": {
    ""textMateRules"": [{
        ""scope"": ""INSERT_SCOPE_HERE"",
        ""settings"": {
            ""foreground"": ""#ff0000""
        }
    }]
}

comment 
punctuation.definition.comment 
comment.block.documentation 
storage.type.class.jsdoc 
entity.name.type.instance.jsdoc 
variable.other.jsdoc",139,10
1666770376-393,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=4&pagesize=15,"How to exclude folder from ""Explore"" tab?",https://stackoverflow.com/questions/33258543/how-to-exclude-folder-from-explore-tab,"How to exclude folder from ""Explore"" tab?","I'm trying to exclude several folders on the Explore tab in Visual Studio Code. To do that, I have added a following jsconfig.json to the root of my project:","Use files.exclude:

Go to File -> Preferences -> Settings (or on Mac Code -> Preferences -> Settings)
Pick the workspace settings tab
Add this code to the settings.json file displayed on the right side:

    // Place your settings in this file to overwrite default and user settings.

    {
        ""settings"": {
            ""files.exclude"": {
                ""**/.git"": true,         // this is a default value
                ""**/.DS_Store"": true,    // this is a default value
    
                ""**/node_modules"": true, // this excludes all folders 
                                        // named ""node_modules"" from 
                                        // the explore tree
    
                // alternative version
                ""node_modules"": true    // this excludes the folder 
                                        // only from the root of
                                        // your workspace 
            }
        }
    }

If you chose File -> Preferences -> User Settings then you configure the exclude folders globally for your current user.",404,10
1666770383-394,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=4&pagesize=15,"VSCode: enable or disable editor tabs modified since last git commit, show git status with modified tabs colors",https://stackoverflow.com/questions/58377383/vscode-enable-or-disable-editor-tabs-modified-since-last-git-commit-show-git-s,"VSCode: enable or disable editor tabs modified since last git commit, show git status with modified tabs colors","In VSCODE, how can I highlight tabs that were modified compared to previous git commit?  In order to show their git status.","v1.53 has added this functionality, see Release notes: tab decorations.

Two new settings allow you to configure whether editor tabs show
decorations, such as git status or diagnostics. Use
workbench.editor.decorations.colors to decorate tabs with colors, like
red/green for files with errors and warnings, and use
workbench.editor.decorations.badges to decorate tabs with badges, like
M for git modified.

Previously : [These are not enabled by default.]
Edit : Note that these are scheduled to be turned on by default as of v1.55.  so if you want to turn this feature off, disable
workbench.editor.decorations.colors

workbench.editor.decorations.badges
or these settings in the UI
Workbench > Editor > Decorations: Colors

Workbench > Editor > Decorations: Badges

The colorCustomizations gitDecoration....
""workbench.colorCustomizations"": {

    ""gitDecoration.modifiedResourceForeground"": ""#ff0000"",
}

work to change BOTH the Explorer view and tab colors.",25,1
1666770410-395,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=4&pagesize=15,How to use visual studio code to compile multi-cpp file?,https://stackoverflow.com/questions/51720769/how-to-use-visual-studio-code-to-compile-multi-cpp-file,How to use visual studio code to compile multi-cpp file?,"I have followed some instructions to construct Visual studio code C/C++ compile and debug environment.But g++ compiler can only compile the selected cpp file, so the included .h file associated the cpp file can not compiled. then the terminal shows 'Undefined symbols for architecture x86_64' error. the code as below:",null,9,4
1666770436-396,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=4&pagesize=15,Visual Studio Code: Take Input From User,https://stackoverflow.com/questions/36964949/visual-studio-code-take-input-from-user,Visual Studio Code: Take Input From User,"Currently, I'm trying to write C/C++ program in Visual Studio code. For this I've installed two extensions: C/C++ & C++ Intellisense","Go to Code -> Preferences -> Settings and add custom settings:
{
   ""code-runner.runInTerminal"": true
}

Finally run your c++ code and you will be able to enter values in console",37,6
1666770462-397,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=4&pagesize=15,"vscode ""#include errors detected. Please update your includePath",https://stackoverflow.com/questions/51227662/vscode-include-errors-detected-please-update-your-includepath,"vscode ""#include errors detected. Please update your includePath","I'm trying to use vscode with arduino but have no success.
The problem seems to be something with the libraries path.
But I havent been able to fix that !
I'm on linux.","Although the question mentions Arduino, the following suggestions apply basically any time VSCode tells you to ""update your includePath"".

What is includePath?

The includePath is an attribute in c_cpp_settings.json, which is in the .vscode folder of the main folder you have opened in VSCode using File → Open Folder.

You can edit c_cpp_settings.json directly, but it is usually easier to use the ""C/C++ Configurations GUI"".  To do that, open the Command Palette (Ctrl+Shift+P) and run ""C/C++: Edit Configurations (UI)"".  Then look for the ""Include path"" setting.

The includePath tells VSCode (specifically the IntelliSense component of the C/C++ extension) where to look when resolving #include ""filename"" directives.  That allows VSCode to see definitions of symbols defined in those files.

So should I fiddle with includePath when VSCode tells me to?

Not at first!  Before changing the include path, if you haven't already, first set the ""Compiler path"" to point at your C/C++ compiler, and set ""IntelliSense mode"" to match the compiler as closely as possible.

You may also need to adjust the Compiler arguments, particularly if the compiler is capable of generating code for multiple targets, for example, both 32-bit and 64-bit code.  (If you don't know what that means, skip it at first.)

Next, in Command Palette, run ""C/C++: Log Diagnostics"".  The output will show you which compiler VSCode found and what it detected as its built-in include path and preprocessor defines.

Then, run these commands in a shell:

  $ touch empty.c
  $ gcc -v -E -dD empty.c


Here, I have assumed you are using gcc as your compiler.  If not, substitute the actual compiler command name.  If your compiler is not a variant of GCC (for example you are using the Microsoft cl.exe compiler), you'll need to look at its documentation or Google to find switches that print the predefined macros and include paths (e.g., see here for cl.exe).

Compare the output of the above command to what VSCode shows in its C/C++ diagnostics output.  Hopefully they are very similar.  If not, try adjusting the Compiler path, IntelliSense mode, or Compiler arguments.  Once you've gotten them as close as possible by adjusting just those three settings, go on to the next step.

Now adjust includePath if necessary

If there are still significant differences between the compiler built-in configuration and what VSCode detects, fix that by (in the C/C++ settings UI) modifying the Include path, Defines, and C/C++ standard fields.  Re-run the C/C++ Log Diagnostics command to see the effects.

It is probably not necessary to add all of the pre-defined preprocessor symbols.  This really only matters if there are #ifdef directives that depend on them, and which are causing VSCode to see the wrong code as active.  I suggest only adding predefined symbols if, while browsing your code, you see a specific case that VSCode gets wrong.

Finally, if your project has header files in places that the compiler does not search by default, that is, you normally have to pass -I switches on the compiler command line, add those as well to the Include path.  The same goes for any -D arguments, which must be added to the Defines.",18,6
1666770488-398,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=4&pagesize=15,Visual Studio Code - Connect to a remote Git repository and PUSH local files to a new remote repository,https://stackoverflow.com/questions/43364233/visual-studio-code-connect-to-a-remote-git-repository-and-push-local-files-to,Visual Studio Code - Connect to a remote Git repository and PUSH local files to a new remote repository,I have created a local project with Visual Studio Code that implements a local Git repository.,"I assume you started to work in a directory and didn't use Git there. The following should work with Git Bash:
cd ""path to your repository""
git init
git add . # If you want to commit everything. Otherwise use .gitconfig files
git commit -m ""initial commit"" # If you change anything, you can add and commit again...

To add a remote, just do
git remote add origin https://...
git remote show origin # If everything is ok, you will see your remote
git push -u origin master # Assuming you are on the master branch.

The -u sets an upstream reference and Git knows from where to fetch/pull and where to push in the future.",56,3
1666770514-399,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=4&pagesize=15,How can I open Visual Studio Code's 'settings.json' file?,https://stackoverflow.com/questions/65908987/how-can-i-open-visual-studio-codes-settings-json-file,How can I open Visual Studio Code's 'settings.json' file?,"I did it many times, and each time I forgot where it was.","To open the User settings:

Open the command palette (either with F1 or Ctrl+Shift+P)
Type ""open settings""
You are presented with a few options¹, choose Open User Settings (JSON)

This image was taken in the VS Code online editor

Which, from the manual and depending on platform, is one of:

Windows %APPDATA%\Code\User\settings.json²
macOS $HOME/Library/Application\ Support/Code/User/settings.json
Linux $HOME/.config/Code/User/settings.json

The Workspace settings will be in a {workspaceName}.code-workspace file where you saved it, and the Folder settings will be in a .vscode folder if and when it has been created.

Official page on User and Workspace Settings
As stated by sevencardz below, VS Code includes a button in the Settings UI gutter which can be used to switch between JSON and graphical view.

The workbench.settings.editor option selects which of the settings files is opened by default when not using the above method, such as with the shortcut ⌘+, or through the application menu.
Footnotes

The aforementioned settings, User and Workspace. Remote settings will appear when using WSL.

By a test this maps to %APPDATA%\Roaming\Code\User\settings.json, I am not sure by what logic.",225,9
1666770540-400,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=4&pagesize=15,What TypeScript version is Visual Studio Code using? How to update it?,https://stackoverflow.com/questions/39668731/what-typescript-version-is-visual-studio-code-using-how-to-update-it,What TypeScript version is Visual Studio Code using? How to update it?,"How can I tell what version of TypeScript is being used in Visual Studio Code?  In particular, I had been using TypeScript 1.8.10 and VSCode 1.4.0.  I first updated VSCode to the latest version, which was 1.5.3.  But checking from the command line, I saw that my TypeScript version was still 1.8.10.  So I updated TypeScript from the command line, and it is now 2.0.3 .","Can TypeScript be updated automatically?

VS Code ships with a recent stable version of TypeScript.
– from VS Code docs

This means there's no way to automatically upgrade the TypeScript version used by VS Code. You can however override the TypeScript version VS Code uses by modifying either the user settings or the workspace settings.

What TypeScript version is VS Code using?
When you open a TypeScript file, VS Code should display the TypeScript version in the status bar at the bottom right of the screen:

In newer versions (or when the status bar is crowded?) you may have to hover the mouse over the {} next to TypeScript to see a pop-up with the information:

Changing the global TypeScript version

Install the desired TypeScript version globally, for example npm install -g typescript@2.0.5
Open VS Code User Settings (F1 > Open User Settings)
Update/Insert ""typescript.tsdk"": ""{your_global_npm_path}/typescript/lib"" you can find out {your_global_npm_path} by typing npm root -g

Now all of the projects you open with VS Code will use this TypeScript version, unless of course there is a workspace setting that overrides this.

Changing the local TypeScript version

Open the project in VS Code

Install the desired TypeScript version locally, for example npm install --save-dev typescript@2.0.5
The --save-dev will update your project's package.json, adding the TypeScript version you installed as a devDependency.

Open VS Code Workspace Settings (F1 > Open Workspace Settings)

Update/Insert ""typescript.tsdk"": ""./node_modules/typescript/lib""
Now only the project you installed this TypeScript version in will use that TypeScript version, the global installation will be ignored by VS Code in this project.

Having added the typescript.tsdk entry it's then also necessary to use the VS Code UI to select the new version:

Click on the version displayed in the VS Code footer:


Select it in the UI:






See also:

Using newer TypeScript versions
Improve documentation for typescript.tsdk to make workspace usage clearer",176,9
1666770566-401,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=4&pagesize=15,How to correctly set PYTHONPATH for Visual Studio Code,https://stackoverflow.com/questions/53653083/how-to-correctly-set-pythonpath-for-visual-studio-code,How to correctly set PYTHONPATH for Visual Studio Code,How do I correctly set up the $PYTHONPATH variable for my workspace in VisualStudio Code?,"I have a situation that I believe is relatively common. I want a script to import a module from another directory. My python project is laid out as follows:
~/project/
  |
  |---modules/
        |
        |---mod.py
  |---scripts/
        |---script.py

in script.py, I have from modules import mod. So my PYTHONPATH needs to be set to ~/project/ (something that PyCharm does automatically).
VSCode is a great editor, but everywhere else, it falls short, in my opinion. This is a perfect example of that.
I create a default launch.json file to ""run the current file"". A ""cwd"": ""${fileDirname}"" line has to be added to make things work like they do in PyCharm (FYI, a list of the built-in variables can be found here).
Debugging
For debugging (the ""play"" button on the sidebar, or the F5 key), the PYTHONPATH set in launch.json or your .env file takes effect. Note that in the .env file, you cannot use variables such as ${workspaceRoot}, but you can easily append or insert to the path by using the proper separator for your platform (; for Windows and : for everyone else).
Because I want to take advantage of that variable, I put this in my launch.json:
    ""env"": {""PYTHONPATH"": ""${workspaceFolder}${pathSeparator}${env:PYTHONPATH}""}

(Thanks to @someonr for the suggestion to use ${pathSeparator}.)
It appears that you can prepend/append to whatever is inherited from the environment (this is not true for settings.json; see below).
This will also work for the hotkey Ctrl+F5 (run without debugging).
For reference, here's the full file, which replicates what PyCharm does automatically:
{
    ""version"": ""0.2.0"",
    ""configurations"": [
        {
            ""name"": ""Python: Current File"",
            ""type"": ""python"",
            ""request"": ""launch"",
            ""program"": ""${file}"",
            ""console"": ""integratedTerminal"",
            ""cwd"": ""${fileDirname}"",
            ""env"": {""PYTHONPATH"": ""${workspaceFolder}${pathSeparator}${env:PYTHONPATH}""}
        }
    ]
}

Run in terminal
If I hit the ""play"" button that appears on the top right of the editor window (when a python file is the active tab), it will not work. This runs the current file in a terminal, which doesn't pay attention to launch.json at all. To make that work, you have to define PYTHONPATH in a settings.json file, by adding this:
    ""terminal.integrated.env.osx"": {""PYTHONPATH"": ""${workspaceFolder}""}

(Note there are different values for each platform.) If you've selected a python interpreter (e.g. from a virtual environment), you will already have a settings.json file in the .vscode directory. Mine looks like this:
{
    ""python.pythonPath"": ""/Users/me/project/venv/bin/python3"",
    ""terminal.integrated.env.osx"": {""PYTHONPATH"": ""${workspaceFolder}""}
}

You can't append or insert values into the inherited PYTHONPATH via the settings.json file. It will only take one string, and it will not parse separators. So even though you could get the value using ${env:PYTHONPATH}, you won't be able to do anything with it.
Moreover, you can't set the current working directory. Even though it would seem you could set it with ""terminal.integrated.cwd"": ""${workspaceFolder}"", it doesn't work. So if any of your scripts do anything with paths relative to their location in the tree, they won't work. The working directory will be your project root.
Note that any changes to the settings.json file will require that you exit the integrated terminal and restart it.
Linting
Nothing I do to launch.json regarding PYTHONPATH makes any difference to pylint, which will red-underline from modules import mod, despite the fact I can put the cursor on mod, hit F12, and the file opens. Snooping around linting settings, the defaults for mypy include --ignore-missing-imports. To replicate this behavior with pylint, add this to your settings.json:
    ""python.linting.pylintArgs"": [
        ""--disable=F0401""
    ] 

Shame that we just have to work around this, but the autocomplete helps a lot when writing the import statements to begin with.
Conclusion
There are many layers to VSCode and it's hard to get things to work together. It seems multiple environments are floating around. In the end:

I cannot ""run in terminal"" because I can't set the current working directory to be the path containing the current file.
I cannot set PYTHONPATH for pylint as that runs in some environment different than the integrated terminal and whatever is controlled by launch.json, so I can only tell pylint to ignore import errors.
Running with F5 works if you set PYTHONPATH either via an .env file or in launch.json",93,13
1666770592-402,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=4&pagesize=15,Visual Studio Code PHP Intelephense Keep Showing Not Necessary Error,https://stackoverflow.com/questions/59149877/visual-studio-code-php-intelephense-keep-showing-not-necessary-error,Visual Studio Code PHP Intelephense Keep Showing Not Necessary Error,"After the latest update of PHP Intelephense that I get today, the intelephense keep showing an error for an undefined symbol for my route (and other class too), there is no error like this before and it's bothering me.","Intelephense 1.3 added undefined type, function, constant, class constant, method, and property diagnostics, where previously in 1.2 there was only undefined variable diagnostics.

Some frameworks are written in a way that provide convenient shortcuts for the user but make it difficult for static analysis engines to discover symbols that are available at runtime.

Stub generators like https://github.com/barryvdh/laravel-ide-helper help fill the gap here and using this with Laravel will take care of many of the false diagnostics by providing concrete definitions of symbols that can be easily discovered.

Still, PHP is a very flexible language and there may be other instances of false undefined symbols depending on how code is written. For this reason, since 1.3.3, intelephense has config options to enable/disable each category of undefined symbol to suit the workspace and coding style.

These options are:
intelephense.diagnostics.undefinedTypes
intelephense.diagnostics.undefinedFunctions
intelephense.diagnostics.undefinedConstants
intelephense.diagnostics.undefinedClassConstants
intelephense.diagnostics.undefinedMethods
intelephense.diagnostics.undefinedProperties
intelephense.diagnostics.undefinedVariables

Setting all of these to false except intelephense.diagnostics.undefinedVariables will give version 1.2 behaviour. See the VSCode settings UI and search for intelephense.",246,20
1666770618-403,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=4&pagesize=15,Visual Studio Code is always asking for Git credentials,https://stackoverflow.com/questions/34400272/visual-studio-code-is-always-asking-for-git-credentials,Visual Studio Code is always asking for Git credentials,"I started using Visual Studio Code, and I was trying to save my test project into GitHub, but Visual Studio Code is always asking for my GitHub credentials.","Why does Visual Studio Code ask for a password? Because Visual Studio Code runs the auto-fetch feature, while the Git server doesn't have any information to authorize your identity. It happens when:

Your Git repository has a https remote URL. Yes! This kind of remote will absolutely ask you every time. No exceptions here! (You can do a temporary trick to cache the authorization as the solution below, but this is not recommended.)
Your Git repository has ssh remote URL, but you've not copied your ssh public key onto the Git server. Use ssh-keygen to generate your key and copy it to Git server. Done! This solution also helps you never retype password on terminal again. See a good instruction by @Fnatical here for the answer.

The updated part at the end of this answer doesn't really help you at all. (It actually makes you stagnant in your workflow.) It only stops things happening in Visual Studio Code and moves these happenings to the terminal.
Sorry if this bad answer has affected you for a long, long time.

The original answer (bad)
I found the solution on Visual Studio Code document:

Tip: You should set up a credential helper to avoid getting asked
for credentials every time VS Code talks to your Git remotes. If you
don't do this, you may want to consider Disabling Autofetch in the ...
menu to reduce the number of prompts you get.

So, turn on the credential helper so that Git will save your password in memory for some time. By default, Git will cache your password for 15 minutes.
In Terminal, enter the following:
git config --global credential.helper cache
# Set Git to use the credential memory cache

To change the default password cache timeout, enter the following:
git config --global credential.helper 'cache --timeout=3600'
# Set the cache to timeout after 1 hour (setting is in seconds)

If the original answer doesn't work
I installed Visual Studio Code and configuration same above, but as @ddieppa said, It didn't work for me too. So I tried to find an option in User Setting, and I saw ""git.autofetch"" = true, now set it's false! Visual Studio Code is no longer required to enter password repeatedly again!
In menu File → Preferences → User Setting:
Type these:
Place your settings in this file to overwrite the default settings:
{
  ""git.autofetch"": false
}",324,28
1666770644-404,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=4&pagesize=15,Why do I keep getting Delete 'cr' [prettier/prettier]?,https://stackoverflow.com/questions/53516594/why-do-i-keep-getting-delete-cr-prettier-prettier,Why do I keep getting Delete 'cr' [prettier/prettier]?,I am using vscode with Prettier 1.7.2 and Eslint 1.7.0. After every newline I get:,"Try setting the ""endOfLine"":""auto"" in your .prettierrc (or .prettierrc.json) file (inside the object)
Or set
'prettier/prettier': [
  'error',
  {
    'endOfLine': 'auto',
  }
]

inside the rules object of the eslintrc file.
If you are using windows machine endOfLine can be ""crlf"" basing on your git config.",535,34
1666770670-405,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=4&pagesize=15,What is a 'workspace' in Visual Studio Code?,https://stackoverflow.com/questions/44629890/what-is-a-workspace-in-visual-studio-code,What is a 'workspace' in Visual Studio Code?,"For example, Visual Studio Code talks about applying settings at the user level vs the workspace level.","What is a workspace?
A project that consists of one or more root folders, along with all of the Visual Studio Code configurations that belong to that project. These configurations include:

settings that should be applied when that project is open
recommended extensions for the project (useful when sharing the configuration files with colleagues)
project-specific debugging configurations

Why is a workspace so confusing?
Visual Studio Code does not use the term consistently across the UI (I've opened a GitHub issue to address this). Sometimes it refers to a workspace as described above, and other times it refers to a workspace as a project that is specifically associated with a .code-workspace file.
A good example being the recent files widget. Notice in the linked screenshot that all projects are grouped under the same ""workspaces"" heading, which would indicate that everything there is a workspace. But then projects with a .code-workspace file are given a ""Workspace"" suffix, contradicting the heading and indicating that only those files are actually workspaces.
What is a .code-workspace file?
It is a JSON file with comments that stores all of the configuration data mentioned above, in addition to the location of all root folders belonging to a workspace.
Do I need a .code-workspace file?
Only if you're creating a multi-root workspace, in which case you'll have a single .code-workspace file that automatically restores all of the workspace settings, in addition to all of the root folders that you want to be displayed in the Explorer.
What about single folder projects?
Everything is automated.
When you open a folder in Visual Studio Code and start making modifications to the editor that are specifically related to the project you're currently working on, Visual Studio Code automatically creates a .vscode folder and stores it in the root of the project folder that you're working on. This .vscode folder has files that store the changes you made.
For example, if you change Visual Studio Code settings that you want to apply only to your current project, Visual Studio Code creates a settings.json file with those updates, and that file is stored in the .vscode folder.
You can create a .code-workspace file that includes just a single root folder if you really want to. You'd then be able to either open the project folder directly, or open the workspace file. But I can't think of any reason why this would be beneficial.
How do I create a .code-workspace file?
Go to menu File → Save Workspace As...
How do I add root folders to a workspace?
Go to menu File → Add Folder to Workspace....
How do I open a workspace that is defined by a .code-workspace file?
Go to menu File → Open Workspace....
Alternatively, double click the .code-workspace file. Visual Studio Code won't open the actual file. Instead, it will read that file and open the folders that belong to that workspace.
How do I view the actual .code-workspace file?
Go to menu File → Open... and select the target .code-workspace file.
Alternatively, open the workspace associated with that file. Then open the command palette, search for, and select the Workspaces: Open Workspace Configuration File command.",836,17
1666770722-406,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=3&pagesize=15,Vertical rulers in Visual Studio Code,https://stackoverflow.com/questions/29968499/vertical-rulers-in-visual-studio-code,Vertical rulers in Visual Studio Code,VS Code's default configuration for a ruler is demonstrated below.,"Visual Studio Code 0.10.10 introduced this feature. To configure it, go to menu File → Preferences → Settings and add this to to your user or workspace settings:

""editor.rulers"": [80,120]


The color of the rulers can be customized like this:

""workbench.colorCustomizations"": {
    ""editorRuler.foreground"": ""#ff4081""
}",1345,11
1666770748-407,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=3&pagesize=15,How can you disable Gutter Indicators in VS Code?,https://stackoverflow.com/questions/43969277/how-can-you-disable-gutter-indicators-in-vs-code,How can you disable Gutter Indicators in VS Code?,"In VS Code, if there's version control in a folder you're working in, it will try and indicate what lines are new and what lines are changed with little color patches in the ""gutter"" section. Actually, both on the left side near the line numbers, and also on the right side in the scroll bar. Is there a way to turn that off?","It is possible to change it in settings.json Ctrl+,

""scm.diffDecorations"": ""all"" | ""gutter"" | ""overview"" | ""none""




Or you can make them transparent:

""workbench.colorCustomizations"": {
    // Gutter indicators (left)
    ""editorGutter.modifiedBackground"": ""#0000"",
    ""editorGutter.addedBackground"": ""#0000"",
    ""editorGutter.deletedBackground"": ""#0000"",
    // Scrollbar indicators (right)
    ""editorOverviewRuler.addedForeground"": ""#0000"",
    ""editorOverviewRuler.modifiedForeground"": ""#0000"",
    ""editorOverviewRuler.deletedForeground"": ""#0000""
}",50,5
1666770774-408,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=3&pagesize=15,Activating Anaconda Environment in VsCode,https://stackoverflow.com/questions/43351596/activating-anaconda-environment-in-vscode,Activating Anaconda Environment in VsCode,"I have Anaconda working on my system and VsCode working, but how do I get VsCode to activate a specific environment when running my python script?","Simply use 


shift + cmd + P  
Search Select Interpreter 





Select it and it will show you the list of your virtual environment created via conda and other python versions





select the environment and you are ready to go.


Quoting the 'Select and activate an environment' docs


  Selecting an interpreter from the list adds an entry for python.pythonPath with

  the path to the interpreter inside your Workspace Settings.",94,15
1666770800-409,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=3&pagesize=15,Does anybody know the name of this setting inside of VS Code Insiders? For grayed out parameter and variable annotations,https://stackoverflow.com/questions/68720113/does-anybody-know-the-name-of-this-setting-inside-of-vs-code-insiders-for-graye,Does anybody know the name of this setting inside of VS Code Insiders? For grayed out parameter and variable annotations,I'm trying to work out the setting that enables these little inline annotations.,"Those are Inlay Hints.  You can enable (the default) or disable them with the setting:
Editor > Inlay Hints: Enabled
or change the Font Family or Font Size by searching for Inlay Hints in the Settings UI.
And there is finer control for parameter names/types, variable types and more for js/ts files.
For a lot more, see the release notes v1.60 release notes:

The most significant new tooling feature in TypeScript 4.4 is inlay
hint support. Inlay hints add additional inline information to source
code to help you understand what the code does.
Parameter name inlay hints for example show the names of parameters in
function calls:

This can help you understand the meaning of each argument at a glance,
which is especially helpful for functions that take Boolean flags or
have parameters that are easy to mix up.
To enable parameter name hints, set
javascript.inlayHints.parameterNames.enabled or
typescript.inlayHints.parameterNames settings. There are three
possible values:
none — Disable parameter inlay hints.   literals — Only show inlay
hints for literals (string, number, Boolean).   all — Show inlay
hints for all arguments.
In addition, VS Code also offers inlay hints that show implicit type
information in your JavaScript and TypeScript code.
Variable type inlay hints show the types of variables that don't have
an explicit type annotations.
Settings - javascript.inlayHints.variableTypes.enabled and
typescript.inlayHints.variableTypes.enabled


[And more at the release notes link.]",20,2
1666770826-410,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=3&pagesize=15,Change the encoding of a file in Visual Studio Code,https://stackoverflow.com/questions/30082741/change-the-encoding-of-a-file-in-visual-studio-code,Change the encoding of a file in Visual Studio Code,"Is there any way to change the encoding of a file?
For example UTF-8 to ISO 8859-1?","So here's how to do that:
In the bottom bar of VSCode, you'll see the label UTF-8. Click it. A
popup opens. Click Save with encoding. You can now pick a new
encoding for that file.
Alternatively, you can change the setting globally in Workspace/User settings using the setting ""files.encoding"": ""utf8"". If using the graphical settings page in VSCode, simply search for encoding. Do note however that this only applies to newly created files.",189,3
1666770852-411,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=3&pagesize=15,Color theme for VS Code integrated terminal,https://stackoverflow.com/questions/42307949/color-theme-for-vs-code-integrated-terminal,Color theme for VS Code integrated terminal,Can we change color settings of VS Code Integrated Terminal? Mine looks dull with just white.,"You can actually modify your user settings and edit each colour individually by adding the following to the user settings.

Open user settings (Ctrl+,)
Search for workbench and select Edit in settings.json under Color Customizations

""workbench.colorCustomizations"" : {
    ""terminal.foreground"" : ""#00FD61"",
    ""terminal.background"" : ""#383737""
}

For more on what colors you can edit you can find out here.",184,11
1666770878-412,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=3&pagesize=15,VSCode is suddenly defaulting to powershell for integrated terminal and tasks,https://stackoverflow.com/questions/69047142/vscode-is-suddenly-defaulting-to-powershell-for-integrated-terminal-and-tasks,VSCode is suddenly defaulting to powershell for integrated terminal and tasks,"When I woke up this morning and launched VSCode my default terminal on launch, and when running tasks is now powershell, instead of Git Bash. I am on windows. I have tried changing the settings.json to no avail. Is there something I'm missing?","Update: Version v1.60.0 had a bug. Upgrade to v1.60.1 or higher for a fix.
The bug manifested in the following symptoms:

The Open in Integrated Terminal shortcut-menu command in the Explorer pane's shortcut always uses the built-in default shell (PowerShell on Windows), ignoring the configured one.

The same goes for running tasks (with or without a separate terminal.integrated.automationShell.* setting).

Also, if a given folder or workspace happened to have an integrated terminal open when quitting Visual Studio Code, the shell that is launched when the integrated terminal automatically reopens the next time is again the built-in default shell, not the configured one. By contrast, if reopening doesn't auto-open the integrated terminal, opening it manually does respect the configured default shell, and so does manually creating another shell instance later.


See GitHub issue  #132150
The following information turned out to be unrelated to the bug, but is hopefully still useful general information about Visual Studio Code's recent change in how shells for the integrated terminal are configured:

Migrating from the legacy default shell settings to shell profiles:

Recently, the ""terminal.integrated.shell.*"" and ""terminal.integrated.shellArgs.*"" settings were deprecated and replaced with a more flexible model that allows defining multiple shells to select from, via so-called shell profiles, optionally defined in setting ""terminal.integrated.profiles.*"", with an associated mandatory ""terminal.integrated.defaultProfile.*"" setting referencing the name of the profile to use by default - which may be an explicitly defined custom profile or one of the built-in, platform-appropriate default profiles.

Note: * in the setting names above represents the appropriate platform identifier, namely windows, linux, or osx (macOS).


As of v1.60.1, if legacy ""terminal.integrated.shell.*"" settings are also present, the new settings take precedence (even though the tooltip when editing ""terminal.integrated.shell.*"" in settings.json suggests that this change is yet to come).

In the absence of both settings, Visual Studio Code's built-in default shell is used, which on Windows is PowerShell,[1] and on Unix-like platforms the user's default shell, as specified in the SHELL environment variable.

Recent Visual Studio Code versions, starting before v1.60 - seemingly as one-time opportunity - displayed a prompt offering to migrate the deprecated settings to the new ones.

Accepting the migration results in the following:

Creation of setting ""terminal.integrated.shell.*"" containing a custom shell profile derived from the values of legacy settings ""terminal.integrated.shell.*"" and, if present, ""terminal.integrated.shellArgs.*""; that custom profile's name has the suffix  (migrated)
Creation of setting terminal.integrated.defaultProfile.* whose value is the migrated profile's name, making it the default shell.
Removal of legacy settings ""terminal.integrated.shell.*"" and ""terminal.integrated.shellArgs.*""


If you decline the migration, you can later effectively perform it by re-choosing the default shell, as described below.

Note: The new ""terminal.integrated.defaultProfile.*"" setting that is created in the process then effectively overrides the legacy ""terminal.integrated.shell.*"" and ""terminal.integrated.shellArgs.*"" settings, but the latter won't be removed automatically. To avoid confusion, it's best to remove them from settings.json manually.






Choose the default shell profile to use in order to (re)specify the default shell:

Click on the down-arrow part of the shell-selector icon () on the right side of the integrated terminal, select Select Default Profile, which presents a list of the defined profiles to select the default from - in the absence of explicitly defined profiles, standard profiles are offered (see below).

This translates into a terminal.integrated.defaultProfile.* setting in settings.json, whose value is the name of the chosen shell profile - which may be the name of a built-in profile or one of the ones explicitly defined in ""terminal.integrated.profiles.*""

Note: This shell is by default also used for tasks (defined in tasks.json), but that can be overridden with a ""terminal.integrated.automationShell.*"" setting pointing to the executable of an alternative shell.



Optionally, in your settings.json file, you may create a platform-appropriate terminal.integrated.profiles.* setting with shell profiles of interest:

Note: Even if your settings.json contains no (platform-appropriate) ""terminal.integrated.profiles.*"" setting, Visual Studio code has built-in standard profiles it knows of and offers them for selection when choosing the default shell.

These standard profiles are a mix of shells that come with the host platform as well as some that Visual Studio detects dynamically on a given system, such as Git Bash on Windows.


To create the standard profiles explicitly, do the following:

Note: You may choose to do this in order to customize the standard profiles. However, if your intent is merely to add custom profiles - see this answer for an example - it isn't necessary to create the standard profiles inside the ""terminal.integrated.profiles.*"" setting, because Visual Studio Code knows about them even if not explicitly defined.

Via File > Preferences > Settings (Ctrl-,), search for profiles and click on Edit in settings.json below the platform-appropriate Terminal > Integrated > Profiles > * setting; this will open settings.json for editing, with the standard profiles added; simply saving the file is sufficient.

Note: If the ""terminal.integrated.profiles.*"" setting shown doesn't contain the expected, platform-appropriate standard profiles, a setting by that name may already be present; to force creation of the standard profiles, remove or comment out the existing setting and save the file, then try again.


On Windows, you'll end up with something like the following:
""terminal.integrated.profiles.windows"": {
  ""PowerShell"": {
    ""source"": ""PowerShell"",
    ""icon"": ""terminal-powershell""
  },
  ""Command Prompt"": {
    ""path"": [
      ""${env:windir}\\Sysnative\\cmd.exe"",
      ""${env:windir}\\System32\\cmd.exe""
    ],
    ""args"": [],
    ""icon"": ""terminal-cmd""
  },
  ""Git Bash"": {
    ""source"": ""Git Bash""
  }
}







The answer you link to in your question, which provides an overview of the various types of shells used in Visual Studio Code, has been updated to reflect the information about the new shell profiles.

[1] Note: If a PowerShell (Core) v6+ installation is found, it takes precedence over the built-in Windows PowerShell version.",74,6
1666770904-413,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=3&pagesize=15,Run JavaScript in Visual Studio Code,https://stackoverflow.com/questions/31778413/run-javascript-in-visual-studio-code,Run JavaScript in Visual Studio Code,Is there a way to execute JavaScript and display the results using Visual Studio Code?,"There is a much easier way to run JavaScript, no configuration needed:

Install the Code Runner Extension
Open the JavaScript code file in Text Editor, then use shortcut Control+Alt+N (or ⌃ Control+⌥ Option+N on macOS), or press F1 and then select/type Run Code, the code will run and the output will be shown in the Output Window.

Besides, you could select part of the JavaScript code and run the code snippet. The extension also works with unsaved files, so you can just create a file, change it to Javascript and write code fast (for when you just need to try something quick). Very convenient!
NodeJS is needed for this else it will not work.",322,22
1666770930-414,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=3&pagesize=15,Multiline editing in Visual Studio Code,https://stackoverflow.com/questions/30037808/multiline-editing-in-visual-studio-code,Multiline editing in Visual Studio Code,Is it possible to enable multiline editing like in Sublime Text?,"On Windows, you hold Ctrl+Alt while pressing the up ↑ or down ↓ arrow keys to add cursors.
Mac: ⌥ Opt+⌘ Cmd+↑/↓
Linux: Shift+Alt+↑/↓

Note that third-party software may interfere with these shortcuts, preventing them from working as intended (particularly Intel's HD Graphics software on Windows; see comments for more details).
If you experience this issue, you can either disable the Intel/other software hotkeys, or modify the VS Code shortcuts (described below).

Press Esc to reset to a single cursor.

Or, as Isidor Nikolic points out, you can hold Alt and left click to place cursors arbitrarily.

You can view and edit keyboard shortcuts via:

File → Preferences → Keyboard Shortcuts

Documentation:
https://code.visualstudio.com/docs/customization/keybindings
Official VS Code Keyboard shortcut cheat sheets:
https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf

https://code.visualstudio.com/shortcuts/keyboard-shortcuts-macos.pdf

https://code.visualstudio.com/shortcuts/keyboard-shortcuts-linux.pdf",905,33
1666770956-415,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=3&pagesize=15,Open files always in a new tab,https://stackoverflow.com/questions/38713405/open-files-always-in-a-new-tab,Open files always in a new tab,I am using Visual Studio Code 1.3.1 with the newly introduced tabs.,"When you [single-]click a file in the left sidebar's file browser or open it from the quick open menu (Ctrl-P, type the file name, Enter), Visual Studio Code opens it in what's called ""Preview Mode"", which allows you to quickly view files.

Preview Mode tabs are not kept open. As soon as you go to open another file from the sidebar, the existing Preview Mode tab (if one exists) is used. You can determine if a tab is in Preview Mode, by looking at its title in the tab bar. If the title is italic, the tab is in preview mode.

To open a file for editing (i.e. don't open in Preview Mode), double-click on the file in the sidebar, or single-click it in the sidebar then double click the title of its Preview Mode tab.

If you want to disable Preview Mode all together, you can do so by setting ""workbench.editor.enablePreview"": false in your settings file. You can also use the ""workbench.editor.enablePreviewFromQuickOpen"" option to disable it only from the quick open menu.

Before you can disable Preview Mode, you'll need to open your Settings File.

Pro Tip: You can use the Command Palette(shortcut Ctrl+Shift+P) to open your settings file, just enter ""Preferences: Open User Settings""!

Once you've opened your settings file (your settings file should be located on the right), add the ""workbench.editor.enablePreview"" property, and set its value to false.

You can learn more about Visual Studio Code's ""Preview Mode"", here.",1774,30
1666770982-416,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=3&pagesize=15,JavaFX-11 with VSCode,https://stackoverflow.com/questions/54349894/javafx-11-with-vscode,JavaFX-11 with VSCode,"I must be missing something obvious here... I am experimenting with VSCode (coming from Eclipse), but I am unable to get VSCode to see the JavaFX11 libraries. In the import statements, all references to JavaFX components are marked:","I'm going to run the HelloFX sample for Eclipse from the OpenJFX samples.

After I open the sample with VSCode, I see the reported error: [Java] The import javafx cannot be resolved [268435846].



This obviously means that JavaFX classes are not resolved, and even if there is an entry in the .classpath file:

<classpathentry kind=""con"" path=""org.eclipse.jdt.USER_LIBRARY/JavaFX11""/>


this library can't be resolved.  

Solving JavaFX SDK

So I'm going to replace that variable with the actual jars from my local JavaFX SDK:

<classpathentry kind=""lib"" path=""/Users/<user>/Downloads/javafx-sdk-11.0.2/lib/javafx.base.jar""/>
<classpathentry kind=""lib"" path=""/Users/<user>/Downloads/javafx-sdk-11.0.2/lib/javafx.graphics.jar""/>
<classpathentry kind=""lib"" path=""/Users/<user>/Downloads/javafx-sdk-11.0.2/lib/javafx.controls.jar""/>
<classpathentry kind=""lib"" path=""/Users/<user>/Downloads/javafx-sdk-11.0.2/lib/javafx.fxml.jar""/>


After refreshing the project, I can see under JAVA DEPENDENCIES these jars.



While the error seems solved, the project still fails to build.

Solving JRE

We need to set JDK 11 for the project, so download it from here. Then open Eclipse and add it to the installed JREs. I see under Java -> Installed JREs -> Execution Environments that the name for the 11 version is JavaSE-11.

The .classpath file from the helloFX project also contains a reference to the JRE:

<classpathentry kind=""con"" path=""org.eclipse.jdt.launching.JRE_CONTAINER/
    org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JDK11"">
    <attributes>
        <attribute name=""module"" value=""true""/>
    </attributes>
</classpathentry>


so I'm going to replace JDK11 with JavaSE-11, and refresh the project. I can see under JAVA DEPENDENCIES that there is a reference to JRE System Library [JavaSE-11].

Solving JAVA_HOME

We need to set the java.home in VSCode.

This can be done in the settings.json from `Preferences->Settings->Workspace Settings:

{
   ""java.dependency.packagePresentation"": ""hierarchical"",
   ""java.home"":""/Users/<user>/Downloads/jdk-11.0.2.jdk/Contents/Home""
}




After modifying it, you'll get a popup with the message Java Language Server configuration changed, please restart VS Code., so restart it.

Trying it out

We can see that there are no errors, there is even a bin folder with the result of the build that automatically VSCode does.

Can we run it? If we try it out, we'll get an error:

Error: JavaFX runtime components are missing, and are required to run this application




This is the error you get when using JavaFX 11 without specifying the module-path.

Solving VM arguments

The final step consist on adding the required vm arguments.

This can be done in the launch.json file. It contains a default configuration, that we can modify adding a new entry for the vmArgs including the --module-path with the local path to the JavaFX SDK and --add-modules with the required JavaFX modules:

{
    ""configurations"": [
        {
            ""type"": ""java"",
            ""name"": ""CodeLens (Launch) - Main"",
            ""request"": ""launch"",
            ""vmArgs"": ""--module-path /Users/<user>/Downloads/javafx-sdk-11.0.2/lib
                --add-modules javafx.controls,javafx.fxml"",
            ""mainClass"": ""hellofx.Main"",
            ""projectName"": ""hellofx""
        }
    ]
}


Now we have everything set. 

Run the project again and it should work.



Note that I'm a first time user of VSCode, so I may have missed something obvious, and maybe some of these steps could be avoided or simplified.",21,3
1666771008-417,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=3&pagesize=15,What flavor of Regex does Visual Studio Code use?,https://stackoverflow.com/questions/42179046/what-flavor-of-regex-does-visual-studio-code-use,What flavor of Regex does Visual Studio Code use?,"Trying to search-replace in Visual Studio Code, I find that its Regex flavor is different from full Visual Studio. Specifically, I try to declare a named group with string (?<p>[\w]+) which works in Visual Studio but not in Visual Studio Code. It'll complain with the error Invalid group.","Rust Regex in the Find/Replace in Files Sidebar

Rob Lourens of MSFT wrote that the file search uses Rust regex. The Rust language documentation describes the syntax.



JavaScript Regex in the Find/Replace in File Widget

Alexandru Dima of MSFT wrote that the find widget uses JavaScript regex. As Wicktor commented, ECMAScript 5's documentation describes the syntax. So does the MDN JavaScript Regular Expression Guide.



Test the Difference

The find in files sidebar does not support (?=foobar) whereas the find in file widget does support that lookahead syntax.



Regarding Find/Replace with Groups

To find/replace with groups, use parentheses () to group and $1, $2, $3, $n to replace. 

Here is an example. 

Before:



After:",184,3
1666771034-418,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=3&pagesize=15,How to make VS Code treat a file extensions as a certain language?,https://stackoverflow.com/questions/29973619/how-to-make-vs-code-treat-a-file-extensions-as-a-certain-language,How to make VS Code treat a file extensions as a certain language?,Or is there a way to switch the current file's language so that the syntax is highlighted correctly?,"Update
Please note that JoelAZ's answer is much easier and results in the same setting changes! The answer below is still valid, just more steps & more fuss.
Old answer
In Visual Studio Code, you can add persistent file associations for language highlighting to your settings.json file like this:
// Place your settings in this file to overwrite the default settings
{
  ""some_setting"": custom_value,
  ...

  ""files.associations"": {
    ""*.thor"": ""ruby"",
    ""*.jsx"": ""javascript"",
    ""Jenkinsfile*"": ""groovy""
  }
}

You can use Ctrl+Shift+P (or View -> Command Palette from the menu) and then type settings JSON. Choose Preferences: Open Settings (JSON) to open your settings.json.
To find the proper language ID, use Ctrl+Shift+P (or View -> Command Palette from the menu) and then type Change Language Mode. You can see the language ID in the list, e.g. type docker to find the language ID for Docker files (dockerfile). In the first entry in the example above, .thor is the file ending, ruby is the language ID.
The Files: Associations feature was first introduced in Visual Studio Code version 1.0 (March 2016). Check the available wildcard patterns in the release notes and the known language strings in the documentation.",545,11
1666771060-419,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=3&pagesize=15,How can I switch word wrap on and off in Visual Studio Code?,https://stackoverflow.com/questions/31025502/how-can-i-switch-word-wrap-on-and-off-in-visual-studio-code,How can I switch word wrap on and off in Visual Studio Code?,"When using code files, you typically don't need longer lines to wrap around. However, with .md files this is in fact rather useful. However, I can't seem to find the option to enable word wrap so longer lines will be wrapped.","Since v1.0 you can toggle word wrap:


with the new command editor.action.toggleWordWrap, or
from the View menu (*View** → Toggle Word Wrap), or
using the ALT+Z keyboard shortcut (for Mac: ⌥+Z).


It can also be controlled with the following settings:


editor.wordWrap
editor.wordWrapColumn
editor.wrappingIndent




Known issues:


renderLineHighlight should highlight the entire logical line


If you'd like these bugs fixed, please vote for them.",739,24
1666771086-420,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=3&pagesize=15,How can I customize the tab-to-space conversion factor?,https://stackoverflow.com/questions/29972396/how-can-i-customize-the-tab-to-space-conversion-factor,How can I customize the tab-to-space conversion factor?,How do I customize the tab-to-space conversion factor when using Visual Studio Code?,"By default, Visual Studio Code will try to guess your indentation options depending on the file you open.

You can turn off indentation guessing via ""editor.detectIndentation"": false.

You can customize this easily via these three settings for Windows in menu File → Preferences → User Settings and for Mac in menu Code → Preferences → Settings or ⌘,:

// The number of spaces a tab is equal to. This setting is overridden
// based on the file contents when `editor.detectIndentation` is true.
""editor.tabSize"": 4,

// Insert spaces when pressing Tab. This setting is overriden
// based on the file contents when `editor.detectIndentation` is true.
""editor.insertSpaces"": true,

// When opening a file, `editor.tabSize` and `editor.insertSpaces`
// will be detected based on the file contents. Set to false to keep
// the values you've explicitly set, above.
""editor.detectIndentation"": false",1242,22
1666771129-421,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=2&pagesize=15,Multi-line regular expressions in Visual Studio Code,https://stackoverflow.com/questions/41150941/multi-line-regular-expressions-in-visual-studio-code,Multi-line regular expressions in Visual Studio Code,"I cannot figure a way to make regular expression match stop not on end of line, but on end of file in VS Code? Is it a tool limitation or there is some kind of pattern that I am not aware of?","It seems the CR is not matched with [\s\S]. Add \r to this character class:

[\s\S\r]+


will match any 1+ chars. 

Other alternatives that proved working are [^\r]+ and [\w\W]+.

If you want to make any character class match line breaks, be it a positive or negative character class, you need to add \r in it.

Examples:


Any text between the two closest a and b chars: a[^ab\r]*b
Any text between START and the closest STOP words:


START[\s\S\r]*?STOP
START[^\r]*?STOP
START[\w\W]*?STOP

Any text between the closest START and STOP words:


START(?:(?!START)[\s\S\r])*?STOP



See a demo screenshot below:",85,2
1666771155-422,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=2&pagesize=15,How do I add assembly references in Visual Studio Code?,https://stackoverflow.com/questions/42000798/how-do-i-add-assembly-references-in-visual-studio-code,How do I add assembly references in Visual Studio Code?,"So I've come across a similar issue twice now while working on my first project in C#.  When trying to add either using System.Data; or using System.Timers;, I get the following error:",".csproj Project file

The following topic applies to .csproj project file and : .NET Core 1.x SDK, .NET Core 2.x SDK

Adds a package reference to a project file.

dotnet add package


Example

Add Newtonsoft.Json NuGet package to a project:

dotnet add package Newtonsoft.Json


.json Project file

The following topic applies to .json project file:

This guide walks you through the process of adding any assembly reference in Visual Studio Code. In this example, we are adding the assembly reference System.Data.SqlClient into .NET Core C# console application.

Note


At step #6, enter the assembly reference that you want.
Some assembly reference is applicable to .NET Framework and it will gives you error(s).
OleDb is not available in .NET Core, probably because it's not cross platform. 


Prerequisites


Install Visual Studio Code
Install .NET Core SDK (Preview 2 version)
Install NuGet Package Manager from the Visual Studio Code Extension Marketplace
Install C# extension from Visual Studio Code Extension Marketplace


Steps


Launch Visual Studio Code
Open your project folder
Launch VS Code Command Palette by pressing F1 or Ctrl+Shift+P or Menu Bar > View > Command Palette 





In Command Palette box, type nu





Click on NuGet Package Manager: Add Package
Enter package filter e.g. system.data (Enter your assembly reference here)





Press Enter
Click on System.Data.SqlClient 





The following prompt pops up





Click on Restore





The following Output panel pops up





In the Explorer panel, click on project.json to open it





In the Editor panel, it shows the assembly reference added into project.json file





Assembly reference, System.Data.SqlClient used in Program.cs",51,6
1666771181-423,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=2&pagesize=15,How do I hide certain files from the sidebar in Visual Studio Code?,https://stackoverflow.com/questions/30140112/how-do-i-hide-certain-files-from-the-sidebar-in-visual-studio-code,How do I hide certain files from the sidebar in Visual Studio Code?,"In Visual Studio Code, what setting can be configured, using file patterns, to hide files from view in the sidebar's file-explorer?","You can configure patterns to hide files and folders from the explorer and searches. 


Open VS User Settings (Main menu: File > Preferences > Settings). This will open the setting screen.
Search for files:exclude in the search at the top.
Configure the User Setting with new glob patterns as needed. In this case add this pattern node_modules/ then click OK. The pattern syntax is powerful. You can find pattern matching details under the Search Across Files topic. 


When you are done it should look something like this:


If you want to directly edit the settings file:
For example to hide a top level node_modules folder in your workspace:

""files.exclude"": {
    ""node_modules/"": true
}


To hide all files that start with ._ such as ._.DS_Store files found on OSX:

""files.exclude"": {
    ""**/._*"": true
}


You also have the ability to change Workspace Settings (Main menu: File > Preferences > Workspace Settings). Workspace settings will create a .vscode/settings.json file in your current workspace and will only be applied to that workspace. User Settings will be applied globally to any instance of VS Code you open, but they won't override Workspace Settings if present. Read more on customizing User and Workspace Settings.",923,12
1666771207-424,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=2&pagesize=15,How can I change the Python version in Visual Studio Code?,https://stackoverflow.com/questions/48135624/how-can-i-change-the-python-version-in-visual-studio-code,How can I change the Python version in Visual Studio Code?,These are my settings:,Under the view menu select 'show command pallet'. One of the commands you can then select from the command palette is 'Python: Select Interpreter'. Selecting this option will allow you to choose which version of python to use.,60,18
1666771233-425,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=2&pagesize=15,VSCode c++ task.json include path and libraries,https://stackoverflow.com/questions/52910102/vscode-c-task-json-include-path-and-libraries,VSCode c++ task.json include path and libraries,"IntelliSense uses c_cpp_properties.json >> includePath to find the headers for auto-completion, but I noticed I still need to specify the include path inside the task.json >> tasks >> args to build.","1. Am I setting up VSCode correctly?

Mostly.  The fact that you have to specify the include paths twice (once in c_cpp_properties.json and again in a file that describes your build) is unavoidable.  In VSCode, the build system and the editor do not understand each other, and both need this information.  In contrast, with Visual Studio (no ""Code""), it would only be necessary to specify the paths once; that is one of the benefits of using a ""true"" Integrated Development Environment.  (But there are drawbacks too; I'm not trying to discourage you from using VSCode.)

However, I do not recommend putting the include paths into tasks.json directly.  Rather, one typically has a separate build system that can be invoked from the command line, and then tasks.json invokes that command too.

As a very common example, you could use GNU Make and replace your current tasks.json with this (untested!) Makefile:

test-sdl: main2.cpp
    g++ -g main2.cpp -ID:\\github\\dependencies\\SDL2-2.0.8\\include -LD:\\github\\dependencies\\SDL2-2.0.8\\lib\\x64 -lSDL2main -lSDL2 -lopengl32 -o test-sdl


This tells make how to build test-sdl from main2.cpp, namely by running the g++ command shown.  (I have deliberately kept this Makefile very simple since the question isn't about Makefiles; just be aware that a real Makefile would break things up for better organization, and the backslashes are likely to need adjustment.)

In any case, then your tasks.json simplifies to:

{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    ""version"": ""2.0.0"",
    ""tasks"": [
        {
            ""label"": ""build"",
            ""type"": ""shell"",
            ""command"": ""make"",   // <-- changed
            ""args"": []           // <-- changed
        }
    ],
    ""group"": {
        ""kind"": ""build"",
        ""isDefault"": true
    },
    ""problemMatcher"":""$gcc""
}


This is better because you don't have crucial build information locked away in a file that only VSCode understands.

2. Can someone explain ... includePath and browse?

VSCode has two different systems for understanding C++ code.  There is the older ""Tag Parser"", which uses browse.path, and the newer ""Intellisense"", which uses includePath.  At this point (2019-08-30, VSCode 1.37.1), my understanding is basically everyone should be using the newer Intellisense system, as it provides more accurate information and should be at least as mature.  Consequently, you should be able to simply ignore browse.path.

To make sure you are using Intellisense rather than Tag Parser, go into File → Preferences → Settings → C/C++ → ""C_Cpp: Intelli Sense Engine"" and make sure that it is ""Default"" rather than ""Tag Parser"".  Note that this setting is stored in settings.json rather than c_cpp_properties.json.",34,4
1666771259-426,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=2&pagesize=15,How to completely uninstall VS Code on mac?,https://stackoverflow.com/questions/42603103/how-to-completely-uninstall-vs-code-on-mac,How to completely uninstall VS Code on mac?,I need to do a clean installation of VS Code on my mac.,"Here are all the places where VSCode stores stuff on Mac OS X, besides the Visual Studio Code.app itself, which is in your Applications folder:

rm -fr ~/Library/Preferences/com.microsoft.VSCode.helper.plist 
rm -fr ~/Library/Preferences/com.microsoft.VSCode.plist 
rm -fr ~/Library/Caches/com.microsoft.VSCode
rm -fr ~/Library/Caches/com.microsoft.VSCode.ShipIt/
rm -fr ~/Library/Application\ Support/Code/
rm -fr ~/Library/Saved\ Application\ State/com.microsoft.VSCode.savedState/
rm -fr ~/.vscode/


Update (Feb 2020): There are potentially also hidden extension directories in your home directories. To get rid of everything make sure you look for those too. They start with .vscode-. 

Please run this command with care. Maybe you want to keep extension directories.

rm -rf ~/.vscode*",143,8
1666771285-427,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=2&pagesize=15,How do I use Bash on Windows from the Visual Studio Code integrated terminal?,https://stackoverflow.com/questions/42606837/how-do-i-use-bash-on-windows-from-the-visual-studio-code-integrated-terminal,How do I use Bash on Windows from the Visual Studio Code integrated terminal?,"Visual Studio Code on Windows uses PowerShell by default as the integrated terminal. If you want to use Bash from Visual Studio Code, what steps should be followed?","Install Git from https://git-scm.com/download/win

Open Visual Studio Code and press and hold Ctrl + ` to open the terminal.


Open the command palette using Ctrl + Shift + P.

Type - Select Default Profile

Select Git Bash from the options

Click on the + icon in the terminal window

The new terminal now will be a Git Bash terminal. Give it a few seconds to load Git Bash


You can now toggle between the different terminals as well from the dropdown in terminal.",453,30
1666771311-428,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=2&pagesize=15,How can I set up a virtual environment for Python in Visual Studio Code?,https://stackoverflow.com/questions/54106071/how-can-i-set-up-a-virtual-environment-for-python-in-visual-studio-code,How can I set up a virtual environment for Python in Visual Studio Code?,In my project folder I created a venv folder:,"P.S.:

I have been using Visual Studio Code for a while now and found an another way to show virtual environments in Visual Studio Code.

Go to the parent folder in which venv is there through a command prompt.

Type code . and Enter. [It is working on both Windows and Linux for me.]

That should also show the virtual environments present in that folder.


Original Answer
I almost run into same problem every time I am working on Visual Studio Code using venv. I follow the below steps:

Go to menu File → Preferences → Settings.

Click on Workspace settings.

Under Files:Association, in the JSON: Schemas section, you will find Edit in settings.json. Click on that.

Update ""python.pythonPath"": ""Your_venv_path/bin/python"" under workspace settings.
(For Windows): Update ""python.pythonPath"": ""Your_venv_path/Scripts/python.exe"" under workspace settings.

Restart Visual Studio Code in case if it still doesn't show your venv.


Note: Use python.defaultInterpreterPath instead of python.pythonPath for newer versions.",162,22
1666771337-429,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=2&pagesize=15,"Git push results in ""Authentication Failed""",https://stackoverflow.com/questions/17659206/git-push-results-in-authentication-failed,"Git push results in ""Authentication Failed""","I have been using GitHub for a little while, and I have been fine with git add, git commit, and git push, so far without any problems. Suddenly I am having an error that says:","If you enabled two-factor authentication in your GitHub account you
won't be able to push via HTTPS using your accounts password. Instead
you need to generate a personal access token. This can be done in the
application settings of your GitHub account. Using this token as your
password should allow you to push to your remote repository via HTTPS.
Use your username as usual.

Creating a personal access token
You may also need to update the origin for your repository if it is set to HTTPS. Do this to switch to SSH:
git remote -v
git remote set-url origin git@github.com:USERNAME/REPONAME.git",1108,44
1666771363-430,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=2&pagesize=15,How can I see local history changes in Visual Studio Code?,https://stackoverflow.com/questions/46446901/how-can-i-see-local-history-changes-in-visual-studio-code,How can I see local history changes in Visual Studio Code?,I'm looking for a way to see my local history changes.,"Visual Studio Code now offers this in the Timeline view. See Mark's answer.
Or alternatively, if you want a plugin to give you similar functionality, for example:
Checkpoints
Or the more famous:
Local History
Some details may need to be configured because the Visual Studio Code search gets confused sometimes because of additional folders created by this type of plugins. To fix this, you can:

Add the history folder to your .gitignore file.
Change the history folder location in the chosen plugin
configuration.
Configure the Visual Studio Code search to ignore the history folder.",146,6
1666771389-431,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=2&pagesize=15,How to reset settings in Visual Studio Code?,https://stackoverflow.com/questions/36108515/how-to-reset-settings-in-visual-studio-code,How to reset settings in Visual Studio Code?,"It's a simple thing and I was pretty sure it's well described, but surprisingly it is not so obvious.","You can get your menu back by pressing/holding alt, you can then toggle the menu back on via the View menu.

As for your settings, you can open your user settings through the command palette:


Press F1
Type user settings
Press enter
Click the ""sheet"" icon to open the settings.json file:




From there you can delete the file's contents and save to reset your settings.



For a more manual route, the settings files are located in the following locations:


Windows %APPDATA%\Code\User\settings.json
macOS $HOME/Library/Application Support/Code/User/settings.json
Linux $HOME/.config/Code/User/settings.json


Extensions are located in the following locations:


Windows %USERPROFILE%\.vscode\extensions
macOS ~/.vscode/extensions
Linux ~/.vscode/extensions",202,13
1666771415-432,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=2&pagesize=15,Enable or disable VS Code Integrated Terminal Tabs?,https://stackoverflow.com/questions/40406096/enable-or-disable-vs-code-integrated-terminal-tabs,Enable or disable VS Code Integrated Terminal Tabs?,"Is it possible to get tabs instead of the select list when using multiple terminals from the ""integrated terminal"" window?","Terminal ""tabs"" appear to be coming to v1.56. See Terminal Tabs release notes.  They are vertical tabs - always visible, if you want, in a resizable view to the left or right.  Not like traditional tabs across the top like a browser though.

Tabs in the terminal [are] available as a preview feature and can be
enabled with the following setting:

""terminal.integrated.tabs.enabled"": true 


The tabs view is a split pane to the right of two split terminals. It
contains icons and labels for each terminal instance.
When enabled, the new tabs view will only show by default when there
is at least 2 terminals.



We've tried to mostly align how the new tabs behave with how the
explorer works, here are some of the other behaviors:

Double clicking the empty space will create a new terminal.
Double clicking the sash will toggle the tabs view width between the ""ideal"" size which displays all the titles without truncating and a
narrow view that shows only the icons.
The tabs can be moved to the left side using the terminal.integrated.tabs.location setting.
Various other configuration settings available under terminal.integrated.tabs.




Terminal Statuses
Along with tabs, we have introduced the concept of statuses to the
terminal. A terminal can have many statuses, each of which represents
a state the terminal can be in temporarily, with the highest severity
one being displayed next to the tab. Status icons appear to the right
of the terminal title in the tabs view. On hover, details of the
status and any associated actions are presented.
On a tab associated with a terminal that requires a relaunch, a
yellow triangle with an exclamation mark is to the right of the
terminal title.
For now, these states are supported:

Relaunch needed: A warning icon status is used if extensions want to change a terminal's environment.
Disconnected: A plug icon status is used when the terminal loses its connection with its process.
Bell: A bell icon appears when the bell is enabled via the terminal.integrated.enableBell setting and the terminal bell
triggers.

We plan to support task states soon so that task run status is
available at a glance even without activating the tab.

And more at the link.  From the Insiders Build:",17,5
1666771441-433,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=2&pagesize=15,"Crbug/1173575, non-JS module files deprecated. chromewebdata/(index)꞉5305:9:5551",https://stackoverflow.com/questions/67191286/crbug-1173575-non-js-module-files-deprecated-chromewebdata-index%ea%9e%89530595551,"Crbug/1173575, non-JS module files deprecated. chromewebdata/(index)꞉5305:9:5551",I just created a new project and have run it for the first time using F5 or Ctrl + F5. The result in Chrome is:,"This misleading error message seemingly has nothing to do with Chrome or any deprecated functionality. It can have many root causes and seems to occur whenever connectivity can't be established.
I got this while following the React tutorial for Visual Studio Code. In that tutorial you start by creating a template with npx and then running it with npm start. That worked, and I could see that it was using http://localhost:3000 for the URL in the browser.
However, when I changed the code as the tutorial requested and set a breakpoint to debug, I got the error in the OP's post, both with Chrome and with Edge.
Visual Studio Code was creating a default launch.json file for debugging and populating it like this:
{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    ""version"": ""0.2.0"",
    ""configurations"": [
        {
            ""type"": ""pwa-chrome"",
            ""request"": ""launch"",
            ""name"": ""Launch Chrome against localhost"",
            ""url"": ""http://localhost:8080"",
            ""webRoot"": ""${workspaceFolder}""
        }
    ]
}

And I needed to manually change the 8080 to 3000 which fixed the problem.
The key for me was configuring the breakpoint to catch the exception like the OP described (note - you can only configure that with the Debug icon selected in the far left icon menu). While the emitted error message is still the misleading ""deprecated"" one, there was a message that ""the site can't be reached"" which you can find if you dig a little - as shown here:

I imagine that practically any configuration issue that causes the connection to fail will cause this error. So firewall issues, missing host program, bad configuration (like mine), etc.",135,44
1666771467-434,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=2&pagesize=15,VSCode -- how to set working directory for debugging a Python program,https://stackoverflow.com/questions/38623138/vscode-how-to-set-working-directory-for-debugging-a-python-program,VSCode -- how to set working directory for debugging a Python program,How do I run a Python program under debug and set the working directory for the run?,"@SpeedCoder5's comment deserves to be an answer.
In launch.json, specify a dynamic working directory (i.e. the directory where the currently-open Python file is located) using:
""cwd"": ""${fileDirname}""

This takes advantage of the ""variables reference"" feature in VS Code, and the predefined variable fileDirname.
If you're using the Python: Current File (Integrated Terminal) option when you run Python, your launch.json file might look like mine, below (more info on launch.json files here).
{
    ""version"": ""0.2.0"",
    ""configurations"": [
    {
            ""name"": ""Python: Current File (Integrated Terminal)"",
            ""type"": ""python"",
            ""request"": ""launch"",
            ""program"": ""${file}"",
            ""console"": ""integratedTerminal"",
            ""cwd"": ""${fileDirname}""
    }, 

    //... other settings, but I modified the ""Current File"" setting above ...
}

Remember the launch.json file controls the run/debug  settings of your Visual Studio code project; my launch.json file was auto-generated by VS Code, in the directory of my current ""Open Project"". I just edited the file manually to add ""cwd"": ""${fileDirname}"" as shown above.
Remember the launch.json file may be specific to your project, or specific to your directory, so confirm you're editing the correct launch.json (see comment)
If you don't have a launch.json file, try this:

To create a launch.json file, open your project folder in VS Code (File > Open Folder) and then select the Configure gear icon on the Debug view top bar.",222,8
1666771493-435,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=2&pagesize=15,How to use Visual Studio Code as default editor for git?,https://stackoverflow.com/questions/30024353/how-to-use-visual-studio-code-as-default-editor-for-git,How to use Visual Studio Code as default editor for git?,"When using git at the command line, I am wondering if it is possible to use Visual Studio Code as the default editor, i.e. when creating commit comments and looking at a diff of a file from the command line.","In the most recent release (v1.0, released in March 2016), you are now able to use VS Code as the default git commit/diff tool. Quoted from the documentations:


  
  Make sure you can run code --help from the command line and you get
  help. 
  
  
  if you do not see help, please follow these steps:
  
  
  Mac: Select Shell Command: Install 'Code' command in path from the Command
  Palette.
  
  
  Command Palette is what pops up when you press shift + ⌘ + P while inside VS 
  Code.  (shift + ctrl + P in Windows)
  
  Windows: Make sure you selected Add to PATH during the
  installation. 
  Linux: Make sure you installed Code via our new .deb or
  .rpm packages. 
  
  
  From the command line, run git config --global core.editor ""code --wait""
  
  
  Now you can run git config --global -e and use VS Code as editor for configuring Git.
  
  Add the following to enable support for using VS Code as diff tool:


[diff]
    tool = default-difftool
[difftool ""default-difftool""]
    cmd = code --wait --diff $LOCAL $REMOTE



  This leverages the new --diff option you can pass to VS Code to
  compare two files side by side.
  
  To summarize, here are some examples of where you can use Git with VS
  Code:
  
  
  git rebase HEAD~3 -i allows to interactive rebase using VS Code
  git commit allows to use VS Code for the commit message
  git add -p followed by e for interactive add 
  git difftool <commit>^ <commit> allows to use VS Code as diff editor for changes",589,18
1666771545-436,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=1&pagesize=15,Why does it say that module pygame has no init member?,https://stackoverflow.com/questions/50569453/why-does-it-say-that-module-pygame-has-no-init-member,Why does it say that module pygame has no init member?,This is the code I have:,"Summarizing all answers.

This is a security measure to not load non-default C extensions.


You can white-list specific extension(s).

Open user settings and add the following between {}:

""python.linting.pylintArgs"": [
    ""--extension-pkg-whitelist=extensionname"" // comma separated
]

You can allow to ""unsafe load"" all extensions.

Open user settings and add the following between {}:

""python.linting.pylintArgs"": [
    ""--unsafe-load-any-extension=y""
]",46,12
1666771571-437,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=1&pagesize=15,How to execute Python code from within Visual Studio Code,https://stackoverflow.com/questions/29987840/how-to-execute-python-code-from-within-visual-studio-code,How to execute Python code from within Visual Studio Code,"Visual Studio Code was recently released and I liked the look of it and the features it offered, so I figured I would give it a go.","There is a much easier way to run Python, and it doesn't need any configuration:

Install the Code Runner Extension.
Open the Python code file in Text Editor.
To run Python code:


use shortcut Ctrl + Alt + N
or press F1 and then select/type Run Code,
or right click the Text Editor and then click Run Code in the editor context menu
or click the Run Code button in the editor title menu
or click Run Code button in the context menu of file explorer


To stop the running code:


use shortcut Ctrl + Alt + M
or press F1 and then select/type Stop Code Run
or right click the Output Channel and then click Stop Code Run in the context menu


If you want to add the Python path, you could go to File → Preference → Settings, and add the Python path like below:
""code-runner.executorMap"":
{
  ""python"": ""\""C:\\Program Files\\Python35\\python.exe\"" -u""
}

In case you have installed the Python extension and manually set your interpreter already, you could configure your settings.json file as follows:
{
    ""python.pythonPath"": ""C:\\\\python36\\\\python36.exe"",
    ""code-runner.executorMap"":
    {
        ""python"": ""$pythonPath -u $fullFileName""
    }
}",267,32
1666771597-438,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=1&pagesize=15,VS Code will not build c++ programs with multiple .ccp source files,https://stackoverflow.com/questions/47665886/vs-code-will-not-build-c-programs-with-multiple-ccp-source-files,VS Code will not build c++ programs with multiple .ccp source files,Note that I'm using VS Code on Ubuntu 17.10 and using the GCC Compiler.,"in tasks.json:

        ""label"": ""g++.exe build active file"",
        ""args"": [
            ""-g"",
            ""${fileDirname}\\**.cpp"",
            //""${fileDirname}\\**.h"",
            ""-o"",
            ""${fileDirname}\\${fileBasenameNoExtension}.exe"",
        ],


in launch.json:

""preLaunchTask"": ""g++.exe build active file""


it will work if your sources are in separated folder",43,14
1666771623-439,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=1&pagesize=15,"Visual Studio Code, #include <stdio.h> saying ""Add include path to settings""",https://stackoverflow.com/questions/37522462/visual-studio-code-include-stdio-h-saying-add-include-path-to-settings,"Visual Studio Code, #include <stdio.h> saying ""Add include path to settings""",I'm trying to build C/C++ in Visual Studio Code. I installed C/C++ and all the relevant extensions.,"A more current take on the situation. During 2018, the C++ extension added another option to the configuration compilerPath of the c_cpp_properties.json file;

compilerPath (optional)
The absolute path to the compiler you use to build your project. The extension will query the compiler to determine the system include paths and default defines to use for IntelliSense.

If used, the includePath would not be needed since the IntelliSense will use the compiler to figure out the system include paths.

Originally,

How and where can I add include paths in the configurations below?

The list is a string array, hence adding an include path would look something like;
""configurations"": [
    {
        ""name"": ""Mac"",
        ""includePath"": [""/usr/local/include"",
            ""/path/to/additional/includes"",
            ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include""
        ]
    }
]

Source; cpptools blog 31 March 2016.
The linked source has a gif showing the format for the Win32 configuration, but the same applies to the others.
The above sample includes the SDK (OSX 10.11) path if Xcode is installed.
Note I find it can take a while to update once the include path has been changed.
The cpptools extension can be found here.
Further documentation (from Microsoft) on the C++ language support in VSCode can be found here.

For the sake of preservation (from the discussion), the following are basic snippets for the contents of the tasks.json file to compile and execute either a C++ file, or a C file. They allow for spaces in the file name (requires escaping the additional quotes in the json using \""). The shell is used as the runner, thus allowing the compilation (clang...) and the execution (&& ./a.out) of the program. It also assumes that the tasks.json ""lives"" in the local workspace (under the directory .vscode). Further task.json details, such as supported variables etc. can be found here.
For C++;
{ 
    ""version"": ""0.1.0"", 
    ""isShellCommand"": true, 
    ""taskName"": ""GenericBuild"", 
    ""showOutput"": ""always"", 
    ""command"": ""sh"", 
    ""suppressTaskName"": false, 
    ""args"": [""-c"", ""clang++ -std=c++14 -Wall -Wextra -pedantic -pthread \""${file}\"" && ./a.out""]
}

For C;
{ 
    ""version"": ""0.1.0"", 
    ""isShellCommand"": true, 
    ""taskName"": ""GenericBuild"", 
    ""showOutput"": ""always"", 
    ""command"": ""sh"", 
    ""suppressTaskName"": false, 
    ""args"": [""-c"", ""clang -std=c11 -Wall -Wextra -pedantic -pthread \""${file}\"" && ./a.out""] // command arguments... 
}",96,14
1666771649-440,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=1&pagesize=15,Disable tooltip hint in Visual Studio Code,https://stackoverflow.com/questions/41115285/disable-tooltip-hint-in-visual-studio-code,Disable tooltip hint in Visual Studio Code,How can I disable the default tooltip hint message in VSCode? It's annoying sometimes.,"editor.hover.enabled: false in settings.json to Tooltip


Click on Edit in settings.json

There are two panes

Default User Settings

""editor.quickSuggestions"": {
    ""other"": false,
    ""comments"": false,
    ""strings"": false
  }


User Settings

""editor.parameterHints.enabled"": false,
""editor.suggest.snippetsPreventQuickSuggestions"": false,
""html.suggest.html5"": false,
""editor.snippetSuggestions"": ""none"",


This also can be done UI.

Setting Snippet Suggestions : false

Update August 2018 (version 1.27)

Goto File=>Preference=>Settings

Text Editor => Suggestions

Click on Edit in settings.json

""editor.parameterHints.enabled"": false,
""editor.suggest.snippetsPreventQuickSuggestions"": false,
""html.suggest.html5"": false,


Update your suggest options and save.



Before August 2018

Goto File=>Preference=>User Settings

You will find settings.json

// Configures if the built-in HTML language support suggests Angular tags and properties.
""html.suggest.angular1"": false,

""html.suggest.ionic"": false,

""html.suggest.html5"": false,


Just find your language and set suggest = false

Update


  Setting to turn off ALL popups


""editor.parameterHints"": false",223,13
1666771675-441,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=1&pagesize=15,Why are there grey blocks of color on the VS Code editor window?,https://stackoverflow.com/questions/72916668/why-are-there-grey-blocks-of-color-on-the-vs-code-editor-window,Why are there grey blocks of color on the VS Code editor window?,"In the VS Code editor window, there are squares of another color that bother me when coding.","I started experiencing this issue in my MacBook Pro M1 after the June 2022 autoupdate.
Setting ""disable-color-correct-rendering"": false in  ~/.vscode/argv.json worked for me.
I hope this is fixed in the next release. It seems to be an old issue based on what I found when searching for a solution.",8,3
1666771701-442,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=1&pagesize=15,"""fatal: Authentication failed for"" when pushing to GitHub from Visual Studio Code (1.62.2)",https://stackoverflow.com/questions/69979522/fatal-authentication-failed-for-when-pushing-to-github-from-visual-studio-cod,"""fatal: Authentication failed for"" when pushing to GitHub from Visual Studio Code (1.62.2)","A lot of us are currently having the issue where we aren't able to push changes to GitHub anymore and getting a
fatal: Authentication failed for error. This has been observed on Linux.","I faced this problem....
TO fix it, you should simply follow these steps:

Go to your github profile settings
Select Developer section and go to Personal Access token
Create a new acces Token ( Copy it as soon as it has been generated )
Then try to push some changes in your repository, you will be asked to put username and password
For the password, just paste the access token you just copied

Happy Coding 🎉🎉🎉🎉",18,7
1666771727-443,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=1&pagesize=15,Why does Prettier not format code in VS Code?,https://stackoverflow.com/questions/52586965/why-does-prettier-not-format-code-in-vs-code,Why does Prettier not format code in VS Code?,"In my Nuxt application where ESlint and Prettier are installed and enabled, I switched to Visual Studio Code.","How I've sorted it after having super huge frustrations with Prettier stopping working in VSCode.


Select VS Code -> View -> Command Palette, and type: Format Document With
Then Configure Default Formatter... and then choose Prettier - Code formatter.


This sorted the problem for me magically.

Depending on your case this might help you...",447,42
1666771753-444,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=1&pagesize=15,How do I collapse sections of code in Visual Studio Code for Windows?,https://stackoverflow.com/questions/30067767/how-do-i-collapse-sections-of-code-in-visual-studio-code-for-windows,How do I collapse sections of code in Visual Studio Code for Windows?,How do I fold or collapse sections of code in Visual Studio Code?,"Folding has been rolled out and is now implemented since Visual Studio Code version 0.10.11. There are these keyboard shortcuts available:

Fold folds the innermost uncollapsed region at the cursor:

Ctrl + Shift + [ on Windows and Linux
⌥ + ⌘ + [ on macOS


Unfold unfolds the collapsed region at the cursor:

Ctrl + Shift + ] on Windows and Linux
⌥ + ⌘ + ] on macOS


Fold All folds all regions in the editor:

Ctrl + K, Ctrl + 0 (zero) on Windows and Linux
⌘ + K, ⌘ +0 (zero) on macOS


Unfold All unfolds all regions in the editor:

Ctrl + K, Ctrl + J on Windows and Linux
⌘ + K, ⌘ + J on macOS




References: https://code.visualstudio.com/docs/getstarted/keybindings",1208,24
1666771779-445,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=1&pagesize=15,"Some Emmet abbreviations in VSC not working, like '!' or using '*'",https://stackoverflow.com/questions/72908218/some-emmet-abbreviations-in-vsc-not-working-like-or-using,"Some Emmet abbreviations in VSC not working, like '!' or using '*'","Every other snippet is working, but !+tab is not.","The v1.69.2 recovery release is out now.  Emmet in html is working as it should for me now.

Looks like it will be in the Recovery Release, see https://github.com/issues?q=is%3Aissue+label%3Acandidate+repo%3Amicrosoft%2Fvscode+repo%3Amicrosoft%2Fvscode-internalbacklog+repo%3Amicrosoft%2Fvscode-remote-release+milestone%3A%22June+2022+Recovery+2%22+.
Don't know when the recovery release to Stable - presumably v1.69.2 - will be released.  The .1 release is out and the fix is not in it.
It has been fixed though, see https://github.com/microsoft/vscode/issues/154375, and should be in the Insiders Build tomorrow (07/13/2022).

Testing the latest Insiders: ! is working.  As is ul>li*3 type expansions (although that never stopped working for me - but it has been reported elsewhere). Should be in the v1.69.2 release out soon.


It is a known issue with the v1.69 release, see html emmet suggestion not automatically display     or https://github.com/microsoft/vscode/issues/154517     for example.  Lots of issues on github on !      and * not working.
So the emmet snippet will not appear automatically when you type !, but you can press Ctrl/Cmd+Space (which is the command Trigger Suggest) to make it appear and select normally.
Try Ctrl/Cmd+Space for anything emmet-related nnnnnot working in vscode v1.69.
You could also go back to v1.68 to solve the issue.",10,8
1666771805-446,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=1&pagesize=15,What are the differences between Visual Studio Code and Visual Studio?,https://stackoverflow.com/questions/30527522/what-are-the-differences-between-visual-studio-code-and-visual-studio,What are the differences between Visual Studio Code and Visual Studio?,"Microsoft recently released Visual Studio Code and I am a little confused about its usage, since Visual Studio has lot of functional similarities with it.","Visual Studio (full version) is a ""full-featured"" and ""convenient"" development environment.
Visual Studio (free ""Express"" versions - only until 2017) are feature-centered and simplified versions of the full version. Feature-centered meaning that there are different versions (Visual Studio Web Developer, Visual Studio C#, etc.) depending on your goal.
Visual Studio (free Community edition - since 2015) is a simplified version of the full version and replaces the separated express editions used before 2015.
Visual Studio Code (VSCode) is a cross-platform (Linux, Mac OS, Windows) editor that can be extended with plugins to your needs.
For example, if you want to create an ASP.NET application using Visual Studio Code you need to perform several steps on your own to setup the project. There is a separate tutorial for each OS.",781,14
1666771831-447,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=1&pagesize=15,"Pylint ""unresolved import"" error in Visual Studio Code",https://stackoverflow.com/questions/53939751/pylint-unresolved-import-error-in-visual-studio-code,"Pylint ""unresolved import"" error in Visual Studio Code",I am using the following setup,"The accepted answer won't fix the error when importing own modules.
Use the following setting in your workspace settings .vscode/settings.json:
""python.autoComplete.extraPaths"": [""./path-to-your-code""],

Reference: Troubleshooting, Unresolved import warnings",219,40
1666771857-448,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=1&pagesize=15,How can I see the full expanded contract of a Typescript type?,https://stackoverflow.com/questions/57683303/how-can-i-see-the-full-expanded-contract-of-a-typescript-type,How can I see the full expanded contract of a Typescript type?,If I have a collection of types that looks a bit like this:,"The quick info for a type displayed with IntelliSense often leaves something to be desired; you generally get a single representation for any given type, which may turn out to be too terse or even too verbose for your purposes.  There are a few suggestions to make it more flexible (e.g., microsoft/TypeScript#25784 and microsoft/TypeScript#28508) so that users could expand/collapse type definitions in their IDEs.  But I don't know if they will get acted on in the near or even far future, so let's not wait around for that.

Here is a type alias I sometimes use to try to expand a type in the way you're talking about:
// expands object types one level deep
type Expand<T> = T extends infer O ? { [K in keyof O]: O[K] } : never;

// expands object types recursively
type ExpandRecursively<T> = T extends object
  ? T extends infer O ? { [K in keyof O]: ExpandRecursively<O[K]> } : never
  : T;

Those use conditional type inference to ""copy"" a type T into a new type variable O and then an identity-like mapped type which iterates through the copied type's properties.
The conditional type inference is conceptually a no-op, but it's used to distribute union types and to force the compiler to evaluate the ""true"" branch of the conditional (if you redefine Expand<T> without it, sometimes the compiler will just output the mapped type {[K in keyof RelevantType]: RelevantType[K]}, which is not what you want to see).
The difference between Expand and ExpandRecursively is whether it should just spit out the property types as-is (Expand), or if it should expand the property types (ExpandRecursively).  It helps in the recursive case not to try to drill down into primitive types, so that's why T extends object condition is included.

Okay, let's see what happens when we use it on your type.  We don't need ExpandRecursively in your case, but we could use it... it gives the same result:
type ExpandedText = Expand<Text>;

which, when we hover over it in the IDE (The TypeScript Playground and VSCode anyway), is displayed as:
/* type ExpandedText = {
  name: string;
  type: ""text"";
  value: string;
  title: string;
  start: number;
  extras: object;
 } */

as you wanted.  Okay, hope that helps; good luck!
Link to code",69,2
1666771883-449,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=1&pagesize=15,How do I set up Visual Studio Code to compile C++ code?,https://stackoverflow.com/questions/30269449/how-do-i-set-up-visual-studio-code-to-compile-c-code,How do I set up Visual Studio Code to compile C++ code?,"Microsoft's Visual Studio Code editor is quite nice, but it has no default support for building C++ projects.","There is a much easier way to compile and run C++ code, no configuration needed:

Install the Code Runner Extension
Open your C++ code file in Text Editor, then use shortcut Ctrl+Alt+N, or press F1 and then select/type Run Code, or right click the Text Editor and then click Run Code in context menu, the code will be compiled and run, and the output will be shown in the Output Window.

Moreover you could update the config in settings.json using different C++ compilers as you want, the default config for C++ is as below:
""code-runner.executorMap"": {
    ""cpp"": ""g++ $fullFileName && ./a.out""
}",272,14
1666771909-450,https://stackoverflow.com/questions/tagged/visual-studio-code?tab=frequent&page=1&pagesize=15,How do you format code in Visual Studio Code (VSCode)?,https://stackoverflow.com/questions/29973357/how-do-you-format-code-in-visual-studio-code-vscode,How do you format code in Visual Studio Code (VSCode)?,"What is the equivalent of Ctrl + K + F and Ctrl + K + D on Windows in Visual Studio for formatting, or ""beautifying"" code in the Visual Studio Code editor?","The code formatting is available in Visual Studio Code through the following shortcuts:

On Windows Shift + Alt + F
On Mac Shift + Option + F
On Linux Ctrl + Shift + I

Alternatively, you can find the shortcut, as well as other shortcuts, through the 'Command Palette' provided in the editor with Ctrl +Shift+ P (or Command + Shift + P on Mac), and then searching for format document.
For unsaved snippets

Open command palette (Win: F1 or Ctrl+Shift+P)

Find ""Change Language Mode""

Select language e.g. json. By now syntax should be highlighted.

Format document (e.g. Open Command Palette -> ""Format Document"")


Unformat

Select text
Command Palette -> Join Lines

'Show the pics'",988,29
